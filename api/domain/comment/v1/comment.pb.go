// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: domain/comment/v1/comment.proto

package commentv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "redbook/api/redbookpb/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Subject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerUid   int64  `protobuf:"varint,2,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	BelongId   int64  `protobuf:"varint,3,opt,name=belong_id,json=belongId,proto3" json:"belong_id,omitempty"`
	BizType    string `protobuf:"bytes,4,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	CreatedAt  int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FloorCount int32  `protobuf:"varint,7,opt,name=floor_count,json=floorCount,proto3" json:"floor_count,omitempty"`
	ReplyCount int32  `protobuf:"varint,8,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	State      int32  `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	Attr       int64  `protobuf:"varint,10,opt,name=attr,proto3" json:"attr,omitempty"`
	Meta       string `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Subject) Reset() {
	*x = Subject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Subject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Subject) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

func (x *Subject) GetBelongId() int64 {
	if x != nil {
		return x.BelongId
	}
	return 0
}

func (x *Subject) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

func (x *Subject) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Subject) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Subject) GetFloorCount() int32 {
	if x != nil {
		return x.FloorCount
	}
	return 0
}

func (x *Subject) GetReplyCount() int32 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *Subject) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Subject) GetAttr() int64 {
	if x != nil {
		return x.Attr
	}
	return 0
}

func (x *Subject) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

type FloorAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyCount int32 `protobuf:"varint,1,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	PinAdmin   int32 `protobuf:"varint,2,opt,name=pin_admin,json=pinAdmin,proto3" json:"pin_admin,omitempty"`
	PinOwner   int32 `protobuf:"varint,3,opt,name=pin_owner,json=pinOwner,proto3" json:"pin_owner,omitempty"`
	Fold       int32 `protobuf:"varint,4,opt,name=fold,proto3" json:"fold,omitempty"`
	Hot        bool  `protobuf:"varint,5,opt,name=hot,proto3" json:"hot,omitempty"`
}

func (x *FloorAttr) Reset() {
	*x = FloorAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloorAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloorAttr) ProtoMessage() {}

func (x *FloorAttr) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloorAttr.ProtoReflect.Descriptor instead.
func (*FloorAttr) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *FloorAttr) GetReplyCount() int32 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *FloorAttr) GetPinAdmin() int32 {
	if x != nil {
		return x.PinAdmin
	}
	return 0
}

func (x *FloorAttr) GetPinOwner() int32 {
	if x != nil {
		return x.PinOwner
	}
	return 0
}

func (x *FloorAttr) GetFold() int32 {
	if x != nil {
		return x.Fold
	}
	return 0
}

func (x *FloorAttr) GetHot() bool {
	if x != nil {
		return x.Hot
	}
	return false
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerUid     int64      `protobuf:"varint,2,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	SubjectId    int64      `protobuf:"varint,3,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	BizType      string     `protobuf:"bytes,4,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	FloorId      int64      `protobuf:"varint,5,opt,name=floor_id,json=floorId,proto3" json:"floor_id,omitempty"`
	Content      string     `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	AtUid        int64      `protobuf:"varint,7,opt,name=at_uid,json=atUid,proto3" json:"at_uid,omitempty"`
	Deleted      int32      `protobuf:"varint,8,opt,name=deleted,proto3" json:"deleted,omitempty"`
	State        int32      `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt    int64      `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64      `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LikeCount    int32      `protobuf:"varint,12,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	DislikeCount int32      `protobuf:"varint,13,opt,name=dislike_count,json=dislikeCount,proto3" json:"dislike_count,omitempty"`
	Dialog       int64      `protobuf:"varint,14,opt,name=dialog,proto3" json:"dialog,omitempty"`
	FanGrade     int32      `protobuf:"varint,15,opt,name=fan_grade,json=fanGrade,proto3" json:"fan_grade,omitempty"`
	Platform     int32      `protobuf:"varint,16,opt,name=platform,proto3" json:"platform,omitempty"`
	Device       string     `protobuf:"bytes,17,opt,name=device,proto3" json:"device,omitempty"`
	Attr         int64      `protobuf:"varint,18,opt,name=attr,proto3" json:"attr,omitempty"`
	Meta         string     `protobuf:"bytes,19,opt,name=meta,proto3" json:"meta,omitempty"`
	FloorAttr    *FloorAttr `protobuf:"bytes,20,opt,name=floor_attr,json=floorAttr,proto3" json:"floor_attr,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *Reply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reply) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

func (x *Reply) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *Reply) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

func (x *Reply) GetFloorId() int64 {
	if x != nil {
		return x.FloorId
	}
	return 0
}

func (x *Reply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Reply) GetAtUid() int64 {
	if x != nil {
		return x.AtUid
	}
	return 0
}

func (x *Reply) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *Reply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Reply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Reply) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Reply) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Reply) GetDislikeCount() int32 {
	if x != nil {
		return x.DislikeCount
	}
	return 0
}

func (x *Reply) GetDialog() int64 {
	if x != nil {
		return x.Dialog
	}
	return 0
}

func (x *Reply) GetFanGrade() int32 {
	if x != nil {
		return x.FanGrade
	}
	return 0
}

func (x *Reply) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *Reply) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Reply) GetAttr() int64 {
	if x != nil {
		return x.Attr
	}
	return 0
}

func (x *Reply) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *Reply) GetFloorAttr() *FloorAttr {
	if x != nil {
		return x.FloorAttr
	}
	return nil
}

type Floor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootReply *Reply     `protobuf:"bytes,1,opt,name=root_reply,json=rootReply,proto3" json:"root_reply,omitempty"`
	Replies   []*Reply   `protobuf:"bytes,2,rep,name=replies,proto3" json:"replies,omitempty"`
	Total     int32      `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Cursor    *v1.Cursor `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *Floor) Reset() {
	*x = Floor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Floor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Floor) ProtoMessage() {}

func (x *Floor) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Floor.ProtoReflect.Descriptor instead.
func (*Floor) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{3}
}

func (x *Floor) GetRootReply() *Reply {
	if x != nil {
		return x.RootReply
	}
	return nil
}

func (x *Floor) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *Floor) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Floor) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type CreateSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BelongId int64  `protobuf:"varint,1,opt,name=belong_id,json=belongId,proto3" json:"belong_id,omitempty"`
	BizType  string `protobuf:"bytes,2,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	OwnerUid int64  `protobuf:"varint,3,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
}

func (x *CreateSubjectReq) Reset() {
	*x = CreateSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubjectReq) ProtoMessage() {}

func (x *CreateSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubjectReq.ProtoReflect.Descriptor instead.
func (*CreateSubjectReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSubjectReq) GetBelongId() int64 {
	if x != nil {
		return x.BelongId
	}
	return 0
}

func (x *CreateSubjectReq) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

func (x *CreateSubjectReq) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

type CreateSubjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId int64 `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *CreateSubjectResponse) Reset() {
	*x = CreateSubjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubjectResponse) ProtoMessage() {}

func (x *CreateSubjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubjectResponse.ProtoReflect.Descriptor instead.
func (*CreateSubjectResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSubjectResponse) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type GetSubjectByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubjectByIdReq) Reset() {
	*x = GetSubjectByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectByIdReq) ProtoMessage() {}

func (x *GetSubjectByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectByIdReq.ProtoReflect.Descriptor instead.
func (*GetSubjectByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *GetSubjectByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubjectByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *GetSubjectByIdResponse) Reset() {
	*x = GetSubjectByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectByIdResponse) ProtoMessage() {}

func (x *GetSubjectByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectByIdResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubjectByIdResponse) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

type GetSubjectByBelongReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BelongId int64  `protobuf:"varint,1,opt,name=belong_id,json=belongId,proto3" json:"belong_id,omitempty"`
	BizType  string `protobuf:"bytes,2,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
}

func (x *GetSubjectByBelongReq) Reset() {
	*x = GetSubjectByBelongReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectByBelongReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectByBelongReq) ProtoMessage() {}

func (x *GetSubjectByBelongReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectByBelongReq.ProtoReflect.Descriptor instead.
func (*GetSubjectByBelongReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{8}
}

func (x *GetSubjectByBelongReq) GetBelongId() int64 {
	if x != nil {
		return x.BelongId
	}
	return 0
}

func (x *GetSubjectByBelongReq) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

type GetSubjectByBelongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *GetSubjectByBelongResponse) Reset() {
	*x = GetSubjectByBelongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubjectByBelongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectByBelongResponse) ProtoMessage() {}

func (x *GetSubjectByBelongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectByBelongResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectByBelongResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{9}
}

func (x *GetSubjectByBelongResponse) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

type CreateReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFloor   bool   `protobuf:"varint,1,opt,name=is_floor,json=isFloor,proto3" json:"is_floor,omitempty"`
	OwnerUid  int64  `protobuf:"varint,2,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	SubjectId int64  `protobuf:"varint,3,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	BizType   string `protobuf:"bytes,4,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	FloorId   int64  `protobuf:"varint,5,opt,name=floor_id,json=floorId,proto3" json:"floor_id,omitempty"`
	Content   string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	AtUid     int64  `protobuf:"varint,7,opt,name=at_uid,json=atUid,proto3" json:"at_uid,omitempty"`
}

func (x *CreateReplyReq) Reset() {
	*x = CreateReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplyReq) ProtoMessage() {}

func (x *CreateReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplyReq.ProtoReflect.Descriptor instead.
func (*CreateReplyReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{10}
}

func (x *CreateReplyReq) GetIsFloor() bool {
	if x != nil {
		return x.IsFloor
	}
	return false
}

func (x *CreateReplyReq) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

func (x *CreateReplyReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *CreateReplyReq) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

func (x *CreateReplyReq) GetFloorId() int64 {
	if x != nil {
		return x.FloorId
	}
	return 0
}

func (x *CreateReplyReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReplyReq) GetAtUid() int64 {
	if x != nil {
		return x.AtUid
	}
	return 0
}

type CreateReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId int64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
}

func (x *CreateReplyResponse) Reset() {
	*x = CreateReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplyResponse) ProtoMessage() {}

func (x *CreateReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplyResponse.ProtoReflect.Descriptor instead.
func (*CreateReplyResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{11}
}

func (x *CreateReplyResponse) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type GetReplyByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetReplyByIdReq) Reset() {
	*x = GetReplyByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplyByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyByIdReq) ProtoMessage() {}

func (x *GetReplyByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyByIdReq.ProtoReflect.Descriptor instead.
func (*GetReplyByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{12}
}

func (x *GetReplyByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetReplyByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *Reply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *GetReplyByIdResponse) Reset() {
	*x = GetReplyByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplyByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyByIdResponse) ProtoMessage() {}

func (x *GetReplyByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyByIdResponse.ProtoReflect.Descriptor instead.
func (*GetReplyByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{13}
}

func (x *GetReplyByIdResponse) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type ListReplyByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListReplyByIdsReq) Reset() {
	*x = ListReplyByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplyByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplyByIdsReq) ProtoMessage() {}

func (x *ListReplyByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplyByIdsReq.ProtoReflect.Descriptor instead.
func (*ListReplyByIdsReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{14}
}

func (x *ListReplyByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListReplyByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies []*Reply `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	Total   int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListReplyByIdsResponse) Reset() {
	*x = ListReplyByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplyByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplyByIdsResponse) ProtoMessage() {}

func (x *ListReplyByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplyByIdsResponse.ProtoReflect.Descriptor instead.
func (*ListReplyByIdsResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{15}
}

func (x *ListReplyByIdsResponse) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *ListReplyByIdsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DialogReplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root    *Reply   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Replies []*Reply `protobuf:"bytes,2,rep,name=Replies,proto3" json:"Replies,omitempty"`
	Total   int32    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DialogReplys) Reset() {
	*x = DialogReplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogReplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogReplys) ProtoMessage() {}

func (x *DialogReplys) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogReplys.ProtoReflect.Descriptor instead.
func (*DialogReplys) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{16}
}

func (x *DialogReplys) GetRoot() *Reply {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *DialogReplys) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *DialogReplys) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListFloorBySubjectSortReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId int64      `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Cursor    *v1.Cursor `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Sort      *v1.Sort   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListFloorBySubjectSortReplyReq) Reset() {
	*x = ListFloorBySubjectSortReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFloorBySubjectSortReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFloorBySubjectSortReplyReq) ProtoMessage() {}

func (x *ListFloorBySubjectSortReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFloorBySubjectSortReplyReq.ProtoReflect.Descriptor instead.
func (*ListFloorBySubjectSortReplyReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{17}
}

func (x *ListFloorBySubjectSortReplyReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ListFloorBySubjectSortReplyReq) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListFloorBySubjectSortReplyReq) GetSort() *v1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ListFloorBySubjectSortReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Floors []*Floor   `protobuf:"bytes,1,rep,name=floors,proto3" json:"floors,omitempty"`
	Total  int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Cursor *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListFloorBySubjectSortReplyResponse) Reset() {
	*x = ListFloorBySubjectSortReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFloorBySubjectSortReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFloorBySubjectSortReplyResponse) ProtoMessage() {}

func (x *ListFloorBySubjectSortReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFloorBySubjectSortReplyResponse.ProtoReflect.Descriptor instead.
func (*ListFloorBySubjectSortReplyResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{18}
}

func (x *ListFloorBySubjectSortReplyResponse) GetFloors() []*Floor {
	if x != nil {
		return x.Floors
	}
	return nil
}

func (x *ListFloorBySubjectSortReplyResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFloorBySubjectSortReplyResponse) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type ListFloorBySubjectSortTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId int64      `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Cursor    *v1.Cursor `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Sort      *v1.Sort   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListFloorBySubjectSortTimeReq) Reset() {
	*x = ListFloorBySubjectSortTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFloorBySubjectSortTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFloorBySubjectSortTimeReq) ProtoMessage() {}

func (x *ListFloorBySubjectSortTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFloorBySubjectSortTimeReq.ProtoReflect.Descriptor instead.
func (*ListFloorBySubjectSortTimeReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{19}
}

func (x *ListFloorBySubjectSortTimeReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ListFloorBySubjectSortTimeReq) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListFloorBySubjectSortTimeReq) GetSort() *v1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ListFloorBySubjectSortTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Floors []*Floor   `protobuf:"bytes,1,rep,name=floors,proto3" json:"floors,omitempty"`
	Total  int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Cursor *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListFloorBySubjectSortTimeResponse) Reset() {
	*x = ListFloorBySubjectSortTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFloorBySubjectSortTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFloorBySubjectSortTimeResponse) ProtoMessage() {}

func (x *ListFloorBySubjectSortTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFloorBySubjectSortTimeResponse.ProtoReflect.Descriptor instead.
func (*ListFloorBySubjectSortTimeResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{20}
}

func (x *ListFloorBySubjectSortTimeResponse) GetFloors() []*Floor {
	if x != nil {
		return x.Floors
	}
	return nil
}

func (x *ListFloorBySubjectSortTimeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFloorBySubjectSortTimeResponse) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type ListReplyByFloorSortLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId int64      `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	FloorId   int64      `protobuf:"varint,2,opt,name=floor_id,json=floorId,proto3" json:"floor_id,omitempty"`
	Cursor    *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Sort      *v1.Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListReplyByFloorSortLikeReq) Reset() {
	*x = ListReplyByFloorSortLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplyByFloorSortLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplyByFloorSortLikeReq) ProtoMessage() {}

func (x *ListReplyByFloorSortLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplyByFloorSortLikeReq.ProtoReflect.Descriptor instead.
func (*ListReplyByFloorSortLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{21}
}

func (x *ListReplyByFloorSortLikeReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ListReplyByFloorSortLikeReq) GetFloorId() int64 {
	if x != nil {
		return x.FloorId
	}
	return 0
}

func (x *ListReplyByFloorSortLikeReq) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListReplyByFloorSortLikeReq) GetSort() *v1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ListReplyByFloorSortLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies []*Reply   `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	Total   int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Cursor  *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListReplyByFloorSortLikeResponse) Reset() {
	*x = ListReplyByFloorSortLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplyByFloorSortLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplyByFloorSortLikeResponse) ProtoMessage() {}

func (x *ListReplyByFloorSortLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplyByFloorSortLikeResponse.ProtoReflect.Descriptor instead.
func (*ListReplyByFloorSortLikeResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{22}
}

func (x *ListReplyByFloorSortLikeResponse) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *ListReplyByFloorSortLikeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListReplyByFloorSortLikeResponse) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type ListReplyByFloorSortTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId int64      `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	FloorId   int64      `protobuf:"varint,2,opt,name=floor_id,json=floorId,proto3" json:"floor_id,omitempty"`
	Cursor    *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Sort      *v1.Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListReplyByFloorSortTimeReq) Reset() {
	*x = ListReplyByFloorSortTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplyByFloorSortTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplyByFloorSortTimeReq) ProtoMessage() {}

func (x *ListReplyByFloorSortTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplyByFloorSortTimeReq.ProtoReflect.Descriptor instead.
func (*ListReplyByFloorSortTimeReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{23}
}

func (x *ListReplyByFloorSortTimeReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ListReplyByFloorSortTimeReq) GetFloorId() int64 {
	if x != nil {
		return x.FloorId
	}
	return 0
}

func (x *ListReplyByFloorSortTimeReq) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListReplyByFloorSortTimeReq) GetSort() *v1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ListReplyByFloorSortTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies []*Reply   `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	Total   int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Cursor  *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListReplyByFloorSortTimeResponse) Reset() {
	*x = ListReplyByFloorSortTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplyByFloorSortTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplyByFloorSortTimeResponse) ProtoMessage() {}

func (x *ListReplyByFloorSortTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplyByFloorSortTimeResponse.ProtoReflect.Descriptor instead.
func (*ListReplyByFloorSortTimeResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{24}
}

func (x *ListReplyByFloorSortTimeResponse) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *ListReplyByFloorSortTimeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListReplyByFloorSortTimeResponse) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type DialogPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Order  string `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	Plat   int32  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"`
	Offset int32  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DialogPageReq) Reset() {
	*x = DialogPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogPageReq) ProtoMessage() {}

func (x *DialogPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogPageReq.ProtoReflect.Descriptor instead.
func (*DialogPageReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{25}
}

func (x *DialogPageReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DialogPageReq) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *DialogPageReq) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

func (x *DialogPageReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DialogPageReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DialogCursorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    int64  `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Sid    int64  `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Bid    int64  `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Order  string `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	Plat   int64  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"`
	Offset int32  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DialogCursorReq) Reset() {
	*x = DialogCursorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogCursorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogCursorReq) ProtoMessage() {}

func (x *DialogCursorReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogCursorReq.ProtoReflect.Descriptor instead.
func (*DialogCursorReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{26}
}

func (x *DialogCursorReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *DialogCursorReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *DialogCursorReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *DialogCursorReq) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *DialogCursorReq) GetPlat() int64 {
	if x != nil {
		return x.Plat
	}
	return 0
}

func (x *DialogCursorReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DialogCursorReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DialogReplysReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// state使用floor root reply的
	Replies []*Reply `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	Total   int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DialogReplysReply) Reset() {
	*x = DialogReplysReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogReplysReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogReplysReply) ProtoMessage() {}

func (x *DialogReplysReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogReplysReply.ProtoReflect.Descriptor instead.
func (*DialogReplysReply) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{27}
}

func (x *DialogReplysReply) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *DialogReplysReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AddLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId int64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AddLikeReq) Reset() {
	*x = AddLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeReq) ProtoMessage() {}

func (x *AddLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeReq.ProtoReflect.Descriptor instead.
func (*AddLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{28}
}

func (x *AddLikeReq) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *AddLikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type AddLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddLikeResponse) Reset() {
	*x = AddLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeResponse) ProtoMessage() {}

func (x *AddLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeResponse.ProtoReflect.Descriptor instead.
func (*AddLikeResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{29}
}

type CancelLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId int64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CancelLikeReq) Reset() {
	*x = CancelLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLikeReq) ProtoMessage() {}

func (x *CancelLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLikeReq.ProtoReflect.Descriptor instead.
func (*CancelLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{30}
}

func (x *CancelLikeReq) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *CancelLikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CancelLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelLikeResponse) Reset() {
	*x = CancelLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLikeResponse) ProtoMessage() {}

func (x *CancelLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLikeResponse.ProtoReflect.Descriptor instead.
func (*CancelLikeResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{31}
}

type IsLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId int64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *IsLikeReq) Reset() {
	*x = IsLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsLikeReq) ProtoMessage() {}

func (x *IsLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsLikeReq.ProtoReflect.Descriptor instead.
func (*IsLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{32}
}

func (x *IsLikeReq) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *IsLikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type IsLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *IsLikeResponse) Reset() {
	*x = IsLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_comment_v1_comment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsLikeResponse) ProtoMessage() {}

func (x *IsLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_comment_v1_comment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsLikeResponse.ProtoReflect.Descriptor instead.
func (*IsLikeResponse) Descriptor() ([]byte, []int) {
	return file_domain_comment_v1_comment_proto_rawDescGZIP(), []int{33}
}

func (x *IsLikeResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_domain_comment_v1_comment_proto protoreflect.FileDescriptor

var file_domain_comment_v1_comment_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
	0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xac, 0x02, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x65,
	0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22,
	0x8c, 0x01, 0x0a, 0x09, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x69, 0x6e, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x69, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6c, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x68, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x22, 0xa7,
	0x06, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x62, 0x69, 0x7a, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0c, 0xea, 0xde, 0x1f, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x52, 0x07, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x06, 0x61, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xea,
	0xde, 0x1f, 0x06, 0x61, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x52, 0x05, 0x61, 0x74, 0x55, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e,
	0xea, 0xde, 0x1f, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0xea,
	0xde, 0x1f, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x6c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x11, 0xea, 0xde, 0x1f, 0x0d, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x06, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x61, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x66, 0x61, 0x6e,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x08, 0x66, 0x61, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea,
	0xde, 0x1f, 0x04, 0x61, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x1c, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0a, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x42, 0x0e, 0xea,
	0xde, 0x1f, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x52, 0x09, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x22, 0xb8, 0x01, 0x0a, 0x05, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x65, 0x6c, 0x6f,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x4f, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x83,
	0x02, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08,
	0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xea, 0xde, 0x1f,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x61, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x52, 0x05, 0x61,
	0x74, 0x55, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x86, 0x01, 0x0a,
	0x0c, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x2c, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9e, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x01, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x26,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x01, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x64,
	0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x20, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62,
	0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64,
	0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x9a, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x80, 0x01,
	0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6c,
	0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xa8, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x01, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x62, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x11, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x39, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x09,
	0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0x80, 0x0a, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x70, 0x63, 0x12,
	0x5e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x23, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x79, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x24, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88,
	0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x36, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42,
	0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x35, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7f, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x2e, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7f, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x33,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1d,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x49, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x50, 0x0a, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x72, 0x65,
	0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_comment_v1_comment_proto_rawDescOnce sync.Once
	file_domain_comment_v1_comment_proto_rawDescData = file_domain_comment_v1_comment_proto_rawDesc
)

func file_domain_comment_v1_comment_proto_rawDescGZIP() []byte {
	file_domain_comment_v1_comment_proto_rawDescOnce.Do(func() {
		file_domain_comment_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_comment_v1_comment_proto_rawDescData)
	})
	return file_domain_comment_v1_comment_proto_rawDescData
}

var file_domain_comment_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_domain_comment_v1_comment_proto_goTypes = []interface{}{
	(*Subject)(nil),                             // 0: domain.comment.v1.Subject
	(*FloorAttr)(nil),                           // 1: domain.comment.v1.FloorAttr
	(*Reply)(nil),                               // 2: domain.comment.v1.Reply
	(*Floor)(nil),                               // 3: domain.comment.v1.Floor
	(*CreateSubjectReq)(nil),                    // 4: domain.comment.v1.CreateSubjectReq
	(*CreateSubjectResponse)(nil),               // 5: domain.comment.v1.CreateSubjectResponse
	(*GetSubjectByIdReq)(nil),                   // 6: domain.comment.v1.GetSubjectByIdReq
	(*GetSubjectByIdResponse)(nil),              // 7: domain.comment.v1.GetSubjectByIdResponse
	(*GetSubjectByBelongReq)(nil),               // 8: domain.comment.v1.GetSubjectByBelongReq
	(*GetSubjectByBelongResponse)(nil),          // 9: domain.comment.v1.GetSubjectByBelongResponse
	(*CreateReplyReq)(nil),                      // 10: domain.comment.v1.CreateReplyReq
	(*CreateReplyResponse)(nil),                 // 11: domain.comment.v1.CreateReplyResponse
	(*GetReplyByIdReq)(nil),                     // 12: domain.comment.v1.GetReplyByIdReq
	(*GetReplyByIdResponse)(nil),                // 13: domain.comment.v1.GetReplyByIdResponse
	(*ListReplyByIdsReq)(nil),                   // 14: domain.comment.v1.ListReplyByIdsReq
	(*ListReplyByIdsResponse)(nil),              // 15: domain.comment.v1.ListReplyByIdsResponse
	(*DialogReplys)(nil),                        // 16: domain.comment.v1.DialogReplys
	(*ListFloorBySubjectSortReplyReq)(nil),      // 17: domain.comment.v1.ListFloorBySubjectSortReplyReq
	(*ListFloorBySubjectSortReplyResponse)(nil), // 18: domain.comment.v1.ListFloorBySubjectSortReplyResponse
	(*ListFloorBySubjectSortTimeReq)(nil),       // 19: domain.comment.v1.ListFloorBySubjectSortTimeReq
	(*ListFloorBySubjectSortTimeResponse)(nil),  // 20: domain.comment.v1.ListFloorBySubjectSortTimeResponse
	(*ListReplyByFloorSortLikeReq)(nil),         // 21: domain.comment.v1.ListReplyByFloorSortLikeReq
	(*ListReplyByFloorSortLikeResponse)(nil),    // 22: domain.comment.v1.ListReplyByFloorSortLikeResponse
	(*ListReplyByFloorSortTimeReq)(nil),         // 23: domain.comment.v1.ListReplyByFloorSortTimeReq
	(*ListReplyByFloorSortTimeResponse)(nil),    // 24: domain.comment.v1.ListReplyByFloorSortTimeResponse
	(*DialogPageReq)(nil),                       // 25: domain.comment.v1.DialogPageReq
	(*DialogCursorReq)(nil),                     // 26: domain.comment.v1.DialogCursorReq
	(*DialogReplysReply)(nil),                   // 27: domain.comment.v1.DialogReplysReply
	(*AddLikeReq)(nil),                          // 28: domain.comment.v1.AddLikeReq
	(*AddLikeResponse)(nil),                     // 29: domain.comment.v1.AddLikeResponse
	(*CancelLikeReq)(nil),                       // 30: domain.comment.v1.CancelLikeReq
	(*CancelLikeResponse)(nil),                  // 31: domain.comment.v1.CancelLikeResponse
	(*IsLikeReq)(nil),                           // 32: domain.comment.v1.IsLikeReq
	(*IsLikeResponse)(nil),                      // 33: domain.comment.v1.IsLikeResponse
	(*v1.Cursor)(nil),                           // 34: redbookpb.v1.Cursor
	(*v1.Sort)(nil),                             // 35: redbookpb.v1.Sort
}
var file_domain_comment_v1_comment_proto_depIdxs = []int32{
	1,  // 0: domain.comment.v1.Reply.floor_attr:type_name -> domain.comment.v1.FloorAttr
	2,  // 1: domain.comment.v1.Floor.root_reply:type_name -> domain.comment.v1.Reply
	2,  // 2: domain.comment.v1.Floor.replies:type_name -> domain.comment.v1.Reply
	34, // 3: domain.comment.v1.Floor.cursor:type_name -> redbookpb.v1.Cursor
	0,  // 4: domain.comment.v1.GetSubjectByIdResponse.subject:type_name -> domain.comment.v1.Subject
	0,  // 5: domain.comment.v1.GetSubjectByBelongResponse.subject:type_name -> domain.comment.v1.Subject
	2,  // 6: domain.comment.v1.GetReplyByIdResponse.reply:type_name -> domain.comment.v1.Reply
	2,  // 7: domain.comment.v1.ListReplyByIdsResponse.replies:type_name -> domain.comment.v1.Reply
	2,  // 8: domain.comment.v1.DialogReplys.root:type_name -> domain.comment.v1.Reply
	2,  // 9: domain.comment.v1.DialogReplys.Replies:type_name -> domain.comment.v1.Reply
	34, // 10: domain.comment.v1.ListFloorBySubjectSortReplyReq.cursor:type_name -> redbookpb.v1.Cursor
	35, // 11: domain.comment.v1.ListFloorBySubjectSortReplyReq.sort:type_name -> redbookpb.v1.Sort
	3,  // 12: domain.comment.v1.ListFloorBySubjectSortReplyResponse.floors:type_name -> domain.comment.v1.Floor
	34, // 13: domain.comment.v1.ListFloorBySubjectSortReplyResponse.cursor:type_name -> redbookpb.v1.Cursor
	34, // 14: domain.comment.v1.ListFloorBySubjectSortTimeReq.cursor:type_name -> redbookpb.v1.Cursor
	35, // 15: domain.comment.v1.ListFloorBySubjectSortTimeReq.sort:type_name -> redbookpb.v1.Sort
	3,  // 16: domain.comment.v1.ListFloorBySubjectSortTimeResponse.floors:type_name -> domain.comment.v1.Floor
	34, // 17: domain.comment.v1.ListFloorBySubjectSortTimeResponse.cursor:type_name -> redbookpb.v1.Cursor
	34, // 18: domain.comment.v1.ListReplyByFloorSortLikeReq.cursor:type_name -> redbookpb.v1.Cursor
	35, // 19: domain.comment.v1.ListReplyByFloorSortLikeReq.sort:type_name -> redbookpb.v1.Sort
	2,  // 20: domain.comment.v1.ListReplyByFloorSortLikeResponse.replies:type_name -> domain.comment.v1.Reply
	34, // 21: domain.comment.v1.ListReplyByFloorSortLikeResponse.cursor:type_name -> redbookpb.v1.Cursor
	34, // 22: domain.comment.v1.ListReplyByFloorSortTimeReq.cursor:type_name -> redbookpb.v1.Cursor
	35, // 23: domain.comment.v1.ListReplyByFloorSortTimeReq.sort:type_name -> redbookpb.v1.Sort
	2,  // 24: domain.comment.v1.ListReplyByFloorSortTimeResponse.replies:type_name -> domain.comment.v1.Reply
	34, // 25: domain.comment.v1.ListReplyByFloorSortTimeResponse.cursor:type_name -> redbookpb.v1.Cursor
	2,  // 26: domain.comment.v1.DialogReplysReply.replies:type_name -> domain.comment.v1.Reply
	4,  // 27: domain.comment.v1.CommentRpc.CreateSubject:input_type -> domain.comment.v1.CreateSubjectReq
	6,  // 28: domain.comment.v1.CommentRpc.GetSubjectById:input_type -> domain.comment.v1.GetSubjectByIdReq
	8,  // 29: domain.comment.v1.CommentRpc.GetSubjectByBelong:input_type -> domain.comment.v1.GetSubjectByBelongReq
	10, // 30: domain.comment.v1.CommentRpc.CreateReply:input_type -> domain.comment.v1.CreateReplyReq
	14, // 31: domain.comment.v1.CommentRpc.ListReplyByIds:input_type -> domain.comment.v1.ListReplyByIdsReq
	17, // 32: domain.comment.v1.CommentRpc.ListFloorBySubjectSortReply:input_type -> domain.comment.v1.ListFloorBySubjectSortReplyReq
	19, // 33: domain.comment.v1.CommentRpc.ListFloorBySubjectSortTime:input_type -> domain.comment.v1.ListFloorBySubjectSortTimeReq
	21, // 34: domain.comment.v1.CommentRpc.ListReplyByFloorSortLike:input_type -> domain.comment.v1.ListReplyByFloorSortLikeReq
	23, // 35: domain.comment.v1.CommentRpc.ListReplyByFloorSortTime:input_type -> domain.comment.v1.ListReplyByFloorSortTimeReq
	28, // 36: domain.comment.v1.CommentRpc.AddLike:input_type -> domain.comment.v1.AddLikeReq
	30, // 37: domain.comment.v1.CommentRpc.CancelLike:input_type -> domain.comment.v1.CancelLikeReq
	32, // 38: domain.comment.v1.CommentRpc.IsLike:input_type -> domain.comment.v1.IsLikeReq
	5,  // 39: domain.comment.v1.CommentRpc.CreateSubject:output_type -> domain.comment.v1.CreateSubjectResponse
	7,  // 40: domain.comment.v1.CommentRpc.GetSubjectById:output_type -> domain.comment.v1.GetSubjectByIdResponse
	9,  // 41: domain.comment.v1.CommentRpc.GetSubjectByBelong:output_type -> domain.comment.v1.GetSubjectByBelongResponse
	11, // 42: domain.comment.v1.CommentRpc.CreateReply:output_type -> domain.comment.v1.CreateReplyResponse
	15, // 43: domain.comment.v1.CommentRpc.ListReplyByIds:output_type -> domain.comment.v1.ListReplyByIdsResponse
	18, // 44: domain.comment.v1.CommentRpc.ListFloorBySubjectSortReply:output_type -> domain.comment.v1.ListFloorBySubjectSortReplyResponse
	20, // 45: domain.comment.v1.CommentRpc.ListFloorBySubjectSortTime:output_type -> domain.comment.v1.ListFloorBySubjectSortTimeResponse
	22, // 46: domain.comment.v1.CommentRpc.ListReplyByFloorSortLike:output_type -> domain.comment.v1.ListReplyByFloorSortLikeResponse
	24, // 47: domain.comment.v1.CommentRpc.ListReplyByFloorSortTime:output_type -> domain.comment.v1.ListReplyByFloorSortTimeResponse
	29, // 48: domain.comment.v1.CommentRpc.AddLike:output_type -> domain.comment.v1.AddLikeResponse
	31, // 49: domain.comment.v1.CommentRpc.CancelLike:output_type -> domain.comment.v1.CancelLikeResponse
	33, // 50: domain.comment.v1.CommentRpc.IsLike:output_type -> domain.comment.v1.IsLikeResponse
	39, // [39:51] is the sub-list for method output_type
	27, // [27:39] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_domain_comment_v1_comment_proto_init() }
func file_domain_comment_v1_comment_proto_init() {
	if File_domain_comment_v1_comment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_comment_v1_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloorAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Floor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubjectByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubjectByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubjectByBelongReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubjectByBelongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplyByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplyByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplyByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplyByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogReplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFloorBySubjectSortReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFloorBySubjectSortReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFloorBySubjectSortTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFloorBySubjectSortTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplyByFloorSortLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplyByFloorSortLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplyByFloorSortTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplyByFloorSortTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogCursorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogReplysReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_comment_v1_comment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_comment_v1_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_comment_v1_comment_proto_goTypes,
		DependencyIndexes: file_domain_comment_v1_comment_proto_depIdxs,
		MessageInfos:      file_domain_comment_v1_comment_proto_msgTypes,
	}.Build()
	File_domain_comment_v1_comment_proto = out.File
	file_domain_comment_v1_comment_proto_rawDesc = nil
	file_domain_comment_v1_comment_proto_goTypes = nil
	file_domain_comment_v1_comment_proto_depIdxs = nil
}
