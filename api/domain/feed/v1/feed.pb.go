// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: domain/feed/v1/feed.proto

package domainfeedv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "redbook/api/redbookpb/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid        int64       `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Title      string      `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content    string      `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt  int64       `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  int64       `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Cover      *v1.Image   `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	Type       string      `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Video      *v1.Video   `protobuf:"bytes,9,opt,name=video,proto3" json:"video,omitempty"`
	Images     []*v1.Image `protobuf:"bytes,10,rep,name=images,proto3" json:"images,omitempty"`
	Tags       []*v1.Tag   `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	State      int32       `protobuf:"varint,12,opt,name=state,proto3" json:"state,omitempty"`
	LikeCount  int32       `protobuf:"varint,13,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	ShareCount int32       `protobuf:"varint,14,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	FavorCount int32       `protobuf:"varint,15,opt,name=favor_count,json=favorCount,proto3" json:"favor_count,omitempty"`
	ViewCount  int32       `protobuf:"varint,16,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	CommentId  int64       `protobuf:"varint,17,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Post) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Post) GetCover() *v1.Image {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *Post) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Post) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Post) GetImages() []*v1.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Post) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Post) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Post) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Post) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *Post) GetFavorCount() int32 {
	if x != nil {
		return x.FavorCount
	}
	return 0
}

func (x *Post) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *Post) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type PostCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64     `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Type      string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Title     string    `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Cover     *v1.Image `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	State     int32     `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	LikeCount int32     `protobuf:"varint,7,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	Tags      []*v1.Tag `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *PostCard) Reset() {
	*x = PostCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCard) ProtoMessage() {}

func (x *PostCard) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCard.ProtoReflect.Descriptor instead.
func (*PostCard) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{1}
}

func (x *PostCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostCard) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PostCard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PostCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostCard) GetCover() *v1.Image {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *PostCard) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PostCard) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *PostCard) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Like struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId    int64 `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid       int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Like) Reset() {
	*x = Like{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Like) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Like) ProtoMessage() {}

func (x *Like) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Like.ProtoReflect.Descriptor instead.
func (*Like) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{2}
}

func (x *Like) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Like) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Like) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Like) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Share struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId    int64 `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid       int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Share) Reset() {
	*x = Share{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{3}
}

func (x *Share) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Share) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Share) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Share) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Favor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId    int64 `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid       int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Favor) Reset() {
	*x = Favor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Favor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Favor) ProtoMessage() {}

func (x *Favor) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Favor.ProtoReflect.Descriptor instead.
func (*Favor) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{4}
}

func (x *Favor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Favor) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Favor) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Favor) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FollowerUid int64 `protobuf:"varint,2,opt,name=follower_uid,json=followerUid,proto3" json:"follower_uid,omitempty"`
	FolloweeUid int64 `protobuf:"varint,3,opt,name=followee_uid,json=followeeUid,proto3" json:"followee_uid,omitempty"`
	CreatedAt   int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{5}
}

func (x *Relation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Relation) GetFollowerUid() int64 {
	if x != nil {
		return x.FollowerUid
	}
	return 0
}

func (x *Relation) GetFolloweeUid() int64 {
	if x != nil {
		return x.FolloweeUid
	}
	return 0
}

func (x *Relation) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{6}
}

type BoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *BoolResponse) Reset() {
	*x = BoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResponse) ProtoMessage() {}

func (x *BoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResponse.ProtoReflect.Descriptor instead.
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{7}
}

func (x *BoolResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreatePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *CreatePostReq) Reset() {
	*x = CreatePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostReq) ProtoMessage() {}

func (x *CreatePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostReq.ProtoReflect.Descriptor instead.
func (*CreatePostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePostReq) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

type CreatePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePostResponse) Reset() {
	*x = CreatePostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResponse) ProtoMessage() {}

func (x *CreatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResponse.ProtoReflect.Descriptor instead.
func (*CreatePostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{9}
}

func (x *CreatePostResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdatePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *UpdatePostReq) Reset() {
	*x = UpdatePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostReq) ProtoMessage() {}

func (x *UpdatePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostReq.ProtoReflect.Descriptor instead.
func (*UpdatePostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{10}
}

func (x *UpdatePostReq) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

type UpdatePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdatePostResponse) Reset() {
	*x = UpdatePostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostResponse) ProtoMessage() {}

func (x *UpdatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostResponse.ProtoReflect.Descriptor instead.
func (*UpdatePostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePostResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPostReq) Reset() {
	*x = GetPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostReq) ProtoMessage() {}

func (x *GetPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostReq.ProtoReflect.Descriptor instead.
func (*GetPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{12}
}

func (x *GetPostReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *GetPostResponse) Reset() {
	*x = GetPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostResponse) ProtoMessage() {}

func (x *GetPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostResponse.ProtoReflect.Descriptor instead.
func (*GetPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{13}
}

func (x *GetPostResponse) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

type ListPostCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset    int32  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string `protobuf:"bytes,4,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListPostCardReq) Reset() {
	*x = ListPostCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostCardReq) ProtoMessage() {}

func (x *ListPostCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostCardReq.ProtoReflect.Descriptor instead.
func (*ListPostCardReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{14}
}

func (x *ListPostCardReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPostCardReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPostCardReq) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPostCardReq) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListPostCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCards []*PostCard `protobuf:"bytes,1,rep,name=postCards,proto3" json:"postCards,omitempty"`
	Total     int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPostCardResponse) Reset() {
	*x = ListPostCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostCardResponse) ProtoMessage() {}

func (x *ListPostCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostCardResponse.ProtoReflect.Descriptor instead.
func (*ListPostCardResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{15}
}

func (x *ListPostCardResponse) GetPostCards() []*PostCard {
	if x != nil {
		return x.PostCards
	}
	return nil
}

func (x *ListPostCardResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListPostCardByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListPostCardByIdsReq) Reset() {
	*x = ListPostCardByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostCardByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostCardByIdsReq) ProtoMessage() {}

func (x *ListPostCardByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostCardByIdsReq.ProtoReflect.Descriptor instead.
func (*ListPostCardByIdsReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{16}
}

func (x *ListPostCardByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListPostCardByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCards []*PostCard `protobuf:"bytes,1,rep,name=postCards,proto3" json:"postCards,omitempty"`
	Total     int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPostCardByIdsResponse) Reset() {
	*x = ListPostCardByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostCardByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostCardByIdsResponse) ProtoMessage() {}

func (x *ListPostCardByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostCardByIdsResponse.ProtoReflect.Descriptor instead.
func (*ListPostCardByIdsResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{17}
}

func (x *ListPostCardByIdsResponse) GetPostCards() []*PostCard {
	if x != nil {
		return x.PostCards
	}
	return nil
}

func (x *ListPostCardByIdsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListPostCardByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListPostCardByUidReq) Reset() {
	*x = ListPostCardByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostCardByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostCardByUidReq) ProtoMessage() {}

func (x *ListPostCardByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostCardByUidReq.ProtoReflect.Descriptor instead.
func (*ListPostCardByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{18}
}

func (x *ListPostCardByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListPostCardByUidReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPostCardByUidReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPostCardByUidReq) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPostCardByUidReq) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListPostCardByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCards []*PostCard `protobuf:"bytes,1,rep,name=postCards,proto3" json:"postCards,omitempty"`
	Total     int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPostCardByUidResponse) Reset() {
	*x = ListPostCardByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostCardByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostCardByUidResponse) ProtoMessage() {}

func (x *ListPostCardByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostCardByUidResponse.ProtoReflect.Descriptor instead.
func (*ListPostCardByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{19}
}

func (x *ListPostCardByUidResponse) GetPostCards() []*PostCard {
	if x != nil {
		return x.PostCards
	}
	return nil
}

func (x *ListPostCardByUidResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListTimelinePostCardWithTimestampReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	Timestamp int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ListTimelinePostCardWithTimestampReq) Reset() {
	*x = ListTimelinePostCardWithTimestampReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimelinePostCardWithTimestampReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimelinePostCardWithTimestampReq) ProtoMessage() {}

func (x *ListTimelinePostCardWithTimestampReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimelinePostCardWithTimestampReq.ProtoReflect.Descriptor instead.
func (*ListTimelinePostCardWithTimestampReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{20}
}

func (x *ListTimelinePostCardWithTimestampReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListTimelinePostCardWithTimestampReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTimelinePostCardWithTimestampReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTimelinePostCardWithTimestampReq) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListTimelinePostCardWithTimestampReq) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

func (x *ListTimelinePostCardWithTimestampReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ListTimelinePostCardWithTimestampResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCards []*PostCard `protobuf:"bytes,1,rep,name=postCards,proto3" json:"postCards,omitempty"`
	Total     int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListTimelinePostCardWithTimestampResponse) Reset() {
	*x = ListTimelinePostCardWithTimestampResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimelinePostCardWithTimestampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimelinePostCardWithTimestampResponse) ProtoMessage() {}

func (x *ListTimelinePostCardWithTimestampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimelinePostCardWithTimestampResponse.ProtoReflect.Descriptor instead.
func (*ListTimelinePostCardWithTimestampResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{21}
}

func (x *ListTimelinePostCardWithTimestampResponse) GetPostCards() []*PostCard {
	if x != nil {
		return x.PostCards
	}
	return nil
}

func (x *ListTimelinePostCardWithTimestampResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeletePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePostReq) Reset() {
	*x = DeletePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostReq) ProtoMessage() {}

func (x *DeletePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostReq.ProtoReflect.Descriptor instead.
func (*DeletePostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{22}
}

func (x *DeletePostReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListVideoPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListVideoPostReq) Reset() {
	*x = ListVideoPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVideoPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVideoPostReq) ProtoMessage() {}

func (x *ListVideoPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVideoPostReq.ProtoReflect.Descriptor instead.
func (*ListVideoPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{23}
}

func (x *ListVideoPostReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListVideoPostReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListVideoPostReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListVideoPostReq) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListVideoPostReq) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListVideoPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts []*Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListVideoPostResponse) Reset() {
	*x = ListVideoPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVideoPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVideoPostResponse) ProtoMessage() {}

func (x *ListVideoPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVideoPostResponse.ProtoReflect.Descriptor instead.
func (*ListVideoPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{24}
}

func (x *ListVideoPostResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *ListVideoPostResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AddFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerUid int64 `protobuf:"varint,1,opt,name=follower_uid,json=followerUid,proto3" json:"follower_uid,omitempty"`
	FolloweeUid int64 `protobuf:"varint,2,opt,name=followee_uid,json=followeeUid,proto3" json:"followee_uid,omitempty"`
}

func (x *AddFollowReq) Reset() {
	*x = AddFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowReq) ProtoMessage() {}

func (x *AddFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowReq.ProtoReflect.Descriptor instead.
func (*AddFollowReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{25}
}

func (x *AddFollowReq) GetFollowerUid() int64 {
	if x != nil {
		return x.FollowerUid
	}
	return 0
}

func (x *AddFollowReq) GetFolloweeUid() int64 {
	if x != nil {
		return x.FolloweeUid
	}
	return 0
}

type CancelFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerUid int64 `protobuf:"varint,1,opt,name=follower_uid,json=followerUid,proto3" json:"follower_uid,omitempty"`
	FolloweeUid int64 `protobuf:"varint,2,opt,name=followee_uid,json=followeeUid,proto3" json:"followee_uid,omitempty"`
}

func (x *CancelFollowReq) Reset() {
	*x = CancelFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFollowReq) ProtoMessage() {}

func (x *CancelFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFollowReq.ProtoReflect.Descriptor instead.
func (*CancelFollowReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{26}
}

func (x *CancelFollowReq) GetFollowerUid() int64 {
	if x != nil {
		return x.FollowerUid
	}
	return 0
}

func (x *CancelFollowReq) GetFolloweeUid() int64 {
	if x != nil {
		return x.FolloweeUid
	}
	return 0
}

type IsFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerUid int64 `protobuf:"varint,1,opt,name=follower_uid,json=followerUid,proto3" json:"follower_uid,omitempty"`
	FolloweeUid int64 `protobuf:"varint,2,opt,name=followee_uid,json=followeeUid,proto3" json:"followee_uid,omitempty"`
}

func (x *IsFollowReq) Reset() {
	*x = IsFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFollowReq) ProtoMessage() {}

func (x *IsFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFollowReq.ProtoReflect.Descriptor instead.
func (*IsFollowReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{27}
}

func (x *IsFollowReq) GetFollowerUid() int64 {
	if x != nil {
		return x.FollowerUid
	}
	return 0
}

func (x *IsFollowReq) GetFolloweeUid() int64 {
	if x != nil {
		return x.FolloweeUid
	}
	return 0
}

type ListFollowerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolloweeUid int64 `protobuf:"varint,1,opt,name=followee_uid,json=followeeUid,proto3" json:"followee_uid,omitempty"`
}

func (x *ListFollowerReq) Reset() {
	*x = ListFollowerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFollowerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFollowerReq) ProtoMessage() {}

func (x *ListFollowerReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFollowerReq.ProtoReflect.Descriptor instead.
func (*ListFollowerReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{28}
}

func (x *ListFollowerReq) GetFolloweeUid() int64 {
	if x != nil {
		return x.FolloweeUid
	}
	return 0
}

type ListFolloweeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerUid int64 `protobuf:"varint,1,opt,name=follower_uid,json=followerUid,proto3" json:"follower_uid,omitempty"`
}

func (x *ListFolloweeReq) Reset() {
	*x = ListFolloweeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFolloweeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFolloweeReq) ProtoMessage() {}

func (x *ListFolloweeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFolloweeReq.ProtoReflect.Descriptor instead.
func (*ListFolloweeReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{29}
}

func (x *ListFolloweeReq) GetFollowerUid() int64 {
	if x != nil {
		return x.FollowerUid
	}
	return 0
}

type ListFollowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations []*Relation `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty"`
	Total     int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFollowerResponse) Reset() {
	*x = ListFollowerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFollowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFollowerResponse) ProtoMessage() {}

func (x *ListFollowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFollowerResponse.ProtoReflect.Descriptor instead.
func (*ListFollowerResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{30}
}

func (x *ListFollowerResponse) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *ListFollowerResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListFolloweeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations []*Relation `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty"`
	Total     int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFolloweeResponse) Reset() {
	*x = ListFolloweeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFolloweeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFolloweeResponse) ProtoMessage() {}

func (x *ListFolloweeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFolloweeResponse.ProtoReflect.Descriptor instead.
func (*ListFolloweeResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{31}
}

func (x *ListFolloweeResponse) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *ListFolloweeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPostStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *GetPostStatReq) Reset() {
	*x = GetPostStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostStatReq) ProtoMessage() {}

func (x *GetPostStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostStatReq.ProtoReflect.Descriptor instead.
func (*GetPostStatReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{32}
}

func (x *GetPostStatReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetPostStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeCount  int32 `protobuf:"varint,1,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	ShareCount int32 `protobuf:"varint,2,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	ViewCount  int32 `protobuf:"varint,3,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	FavorCount int32 `protobuf:"varint,4,opt,name=favor_count,json=favorCount,proto3" json:"favor_count,omitempty"`
}

func (x *GetPostStatResponse) Reset() {
	*x = GetPostStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostStatResponse) ProtoMessage() {}

func (x *GetPostStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostStatResponse.ProtoReflect.Descriptor instead.
func (*GetPostStatResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{33}
}

func (x *GetPostStatResponse) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *GetPostStatResponse) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *GetPostStatResponse) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *GetPostStatResponse) GetFavorCount() int32 {
	if x != nil {
		return x.FavorCount
	}
	return 0
}

type AddLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AddLikeReq) Reset() {
	*x = AddLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeReq) ProtoMessage() {}

func (x *AddLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeReq.ProtoReflect.Descriptor instead.
func (*AddLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{34}
}

func (x *AddLikeReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *AddLikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CancelLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CancelLikeReq) Reset() {
	*x = CancelLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLikeReq) ProtoMessage() {}

func (x *CancelLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLikeReq.ProtoReflect.Descriptor instead.
func (*CancelLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{35}
}

func (x *CancelLikeReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CancelLikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type IsLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *IsLikeReq) Reset() {
	*x = IsLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsLikeReq) ProtoMessage() {}

func (x *IsLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsLikeReq.ProtoReflect.Descriptor instead.
func (*IsLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{36}
}

func (x *IsLikeReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *IsLikeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListLikeByPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *ListLikeByPostReq) Reset() {
	*x = ListLikeByPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLikeByPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLikeByPostReq) ProtoMessage() {}

func (x *ListLikeByPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLikeByPostReq.ProtoReflect.Descriptor instead.
func (*ListLikeByPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{37}
}

func (x *ListLikeByPostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type ListLikeByPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Likes []*Like `protobuf:"bytes,1,rep,name=likes,proto3" json:"likes,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListLikeByPostResponse) Reset() {
	*x = ListLikeByPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLikeByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLikeByPostResponse) ProtoMessage() {}

func (x *ListLikeByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLikeByPostResponse.ProtoReflect.Descriptor instead.
func (*ListLikeByPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{38}
}

func (x *ListLikeByPostResponse) GetLikes() []*Like {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *ListLikeByPostResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListLikeByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListLikeByUidReq) Reset() {
	*x = ListLikeByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLikeByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLikeByUidReq) ProtoMessage() {}

func (x *ListLikeByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLikeByUidReq.ProtoReflect.Descriptor instead.
func (*ListLikeByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{39}
}

func (x *ListLikeByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListLikeByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Likes []*Like `protobuf:"bytes,1,rep,name=likes,proto3" json:"likes,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListLikeByUidResponse) Reset() {
	*x = ListLikeByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLikeByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLikeByUidResponse) ProtoMessage() {}

func (x *ListLikeByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLikeByUidResponse.ProtoReflect.Descriptor instead.
func (*ListLikeByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{40}
}

func (x *ListLikeByUidResponse) GetLikes() []*Like {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *ListLikeByUidResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetLikeCountByPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *GetLikeCountByPostReq) Reset() {
	*x = GetLikeCountByPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikeCountByPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikeCountByPostReq) ProtoMessage() {}

func (x *GetLikeCountByPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikeCountByPostReq.ProtoReflect.Descriptor instead.
func (*GetLikeCountByPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{41}
}

func (x *GetLikeCountByPostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetLikeCountByPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetLikeCountByPostResponse) Reset() {
	*x = GetLikeCountByPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikeCountByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikeCountByPostResponse) ProtoMessage() {}

func (x *GetLikeCountByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikeCountByPostResponse.ProtoReflect.Descriptor instead.
func (*GetLikeCountByPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{42}
}

func (x *GetLikeCountByPostResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AddFavorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AddFavorReq) Reset() {
	*x = AddFavorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFavorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFavorReq) ProtoMessage() {}

func (x *AddFavorReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFavorReq.ProtoReflect.Descriptor instead.
func (*AddFavorReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{43}
}

func (x *AddFavorReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *AddFavorReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CancelFavorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CancelFavorReq) Reset() {
	*x = CancelFavorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFavorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFavorReq) ProtoMessage() {}

func (x *CancelFavorReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFavorReq.ProtoReflect.Descriptor instead.
func (*CancelFavorReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{44}
}

func (x *CancelFavorReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CancelFavorReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type IsFavorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *IsFavorReq) Reset() {
	*x = IsFavorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavorReq) ProtoMessage() {}

func (x *IsFavorReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavorReq.ProtoReflect.Descriptor instead.
func (*IsFavorReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{45}
}

func (x *IsFavorReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *IsFavorReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListFavorByPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *ListFavorByPostReq) Reset() {
	*x = ListFavorByPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFavorByPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFavorByPostReq) ProtoMessage() {}

func (x *ListFavorByPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFavorByPostReq.ProtoReflect.Descriptor instead.
func (*ListFavorByPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{46}
}

func (x *ListFavorByPostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type ListFavorByPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favors []*Favor `protobuf:"bytes,1,rep,name=favors,proto3" json:"favors,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFavorByPostResponse) Reset() {
	*x = ListFavorByPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFavorByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFavorByPostResponse) ProtoMessage() {}

func (x *ListFavorByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFavorByPostResponse.ProtoReflect.Descriptor instead.
func (*ListFavorByPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{47}
}

func (x *ListFavorByPostResponse) GetFavors() []*Favor {
	if x != nil {
		return x.Favors
	}
	return nil
}

func (x *ListFavorByPostResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListFavorByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListFavorByUidReq) Reset() {
	*x = ListFavorByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFavorByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFavorByUidReq) ProtoMessage() {}

func (x *ListFavorByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFavorByUidReq.ProtoReflect.Descriptor instead.
func (*ListFavorByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{48}
}

func (x *ListFavorByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListFavorByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favors []*Favor `protobuf:"bytes,1,rep,name=favors,proto3" json:"favors,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFavorByUidResponse) Reset() {
	*x = ListFavorByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFavorByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFavorByUidResponse) ProtoMessage() {}

func (x *ListFavorByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFavorByUidResponse.ProtoReflect.Descriptor instead.
func (*ListFavorByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{49}
}

func (x *ListFavorByUidResponse) GetFavors() []*Favor {
	if x != nil {
		return x.Favors
	}
	return nil
}

func (x *ListFavorByUidResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetFavorCountByPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *GetFavorCountByPostReq) Reset() {
	*x = GetFavorCountByPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavorCountByPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavorCountByPostReq) ProtoMessage() {}

func (x *GetFavorCountByPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavorCountByPostReq.ProtoReflect.Descriptor instead.
func (*GetFavorCountByPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{50}
}

func (x *GetFavorCountByPostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetFavorCountByPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetFavorCountByPostResponse) Reset() {
	*x = GetFavorCountByPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavorCountByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavorCountByPostResponse) ProtoMessage() {}

func (x *GetFavorCountByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavorCountByPostResponse.ProtoReflect.Descriptor instead.
func (*GetFavorCountByPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{51}
}

func (x *GetFavorCountByPostResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AddShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AddShareReq) Reset() {
	*x = AddShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShareReq) ProtoMessage() {}

func (x *AddShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShareReq.ProtoReflect.Descriptor instead.
func (*AddShareReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{52}
}

func (x *AddShareReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *AddShareReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CancelShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CancelShareReq) Reset() {
	*x = CancelShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelShareReq) ProtoMessage() {}

func (x *CancelShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelShareReq.ProtoReflect.Descriptor instead.
func (*CancelShareReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{53}
}

func (x *CancelShareReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CancelShareReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type IsShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *IsShareReq) Reset() {
	*x = IsShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsShareReq) ProtoMessage() {}

func (x *IsShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsShareReq.ProtoReflect.Descriptor instead.
func (*IsShareReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{54}
}

func (x *IsShareReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *IsShareReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListShareByPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *ListShareByPostReq) Reset() {
	*x = ListShareByPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareByPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareByPostReq) ProtoMessage() {}

func (x *ListShareByPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareByPostReq.ProtoReflect.Descriptor instead.
func (*ListShareByPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{55}
}

func (x *ListShareByPostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type ListShareByPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shares []*Share `protobuf:"bytes,1,rep,name=shares,proto3" json:"shares,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListShareByPostResponse) Reset() {
	*x = ListShareByPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareByPostResponse) ProtoMessage() {}

func (x *ListShareByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareByPostResponse.ProtoReflect.Descriptor instead.
func (*ListShareByPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{56}
}

func (x *ListShareByPostResponse) GetShares() []*Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *ListShareByPostResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListShareByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListShareByUidReq) Reset() {
	*x = ListShareByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareByUidReq) ProtoMessage() {}

func (x *ListShareByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareByUidReq.ProtoReflect.Descriptor instead.
func (*ListShareByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{57}
}

func (x *ListShareByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListShareByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shares []*Share `protobuf:"bytes,1,rep,name=shares,proto3" json:"shares,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListShareByUidResponse) Reset() {
	*x = ListShareByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShareByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShareByUidResponse) ProtoMessage() {}

func (x *ListShareByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShareByUidResponse.ProtoReflect.Descriptor instead.
func (*ListShareByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{58}
}

func (x *ListShareByUidResponse) GetShares() []*Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *ListShareByUidResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetShareCountByPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *GetShareCountByPostReq) Reset() {
	*x = GetShareCountByPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareCountByPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareCountByPostReq) ProtoMessage() {}

func (x *GetShareCountByPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareCountByPostReq.ProtoReflect.Descriptor instead.
func (*GetShareCountByPostReq) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{59}
}

func (x *GetShareCountByPostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetShareCountByPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetShareCountByPostResponse) Reset() {
	*x = GetShareCountByPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_feed_v1_feed_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareCountByPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareCountByPostResponse) ProtoMessage() {}

func (x *GetShareCountByPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_feed_v1_feed_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareCountByPostResponse.ProtoReflect.Descriptor instead.
func (*GetShareCountByPostResponse) Descriptor() ([]byte, []int) {
	return file_domain_feed_v1_feed_proto_rawDescGZIP(), []int{60}
}

func (x *GetShareCountByPostResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_domain_feed_v1_feed_proto protoreflect.FileDescriptor

var file_domain_feed_v1_feed_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xae, 0x04, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xf4, 0x03, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x18, 0x14, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65,
	0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f,
	0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xf8, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x14, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x7b, 0x0a, 0x04, 0x4c,
	0x69, 0x6b, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7c, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7c, 0x0a, 0x05, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a,
	0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x39, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x22, 0x24, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x8e, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x69, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x24,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x79, 0x0a, 0x29, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8a, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x66, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x55, 0x69, 0x64, 0x22,
	0x69, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x55, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x0b, 0x49, 0x73,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x55, 0x69,
	0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x55, 0x69, 0x64,
	0x22, 0x3d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22,
	0x64, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x95, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6b,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x4c, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0x48, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x5a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2d, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x4d, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x49, 0x0a, 0x0a, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x3a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x33, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0x4d, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x49, 0x0a, 0x0a, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x3a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x32, 0xc5, 0x15, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x64, 0x52, 0x70, 0x63, 0x12, 0x4f,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x21,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x34, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x39, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1f,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08,
	0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b,
	0x65, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x06, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x20, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f,
	0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x12, 0x1e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x07, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x12, 0x1a, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f,
	0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x2b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x1e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x07, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x79,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42,
	0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4a, 0x0a, 0x12, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x42, 0x09, 0x46, 0x65, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x72,
	0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x66, 0x65, 0x65, 0x64, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_feed_v1_feed_proto_rawDescOnce sync.Once
	file_domain_feed_v1_feed_proto_rawDescData = file_domain_feed_v1_feed_proto_rawDesc
)

func file_domain_feed_v1_feed_proto_rawDescGZIP() []byte {
	file_domain_feed_v1_feed_proto_rawDescOnce.Do(func() {
		file_domain_feed_v1_feed_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_feed_v1_feed_proto_rawDescData)
	})
	return file_domain_feed_v1_feed_proto_rawDescData
}

var file_domain_feed_v1_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_domain_feed_v1_feed_proto_goTypes = []interface{}{
	(*Post)(nil),                                      // 0: domain.feed.v1.Post
	(*PostCard)(nil),                                  // 1: domain.feed.v1.PostCard
	(*Like)(nil),                                      // 2: domain.feed.v1.Like
	(*Share)(nil),                                     // 3: domain.feed.v1.Share
	(*Favor)(nil),                                     // 4: domain.feed.v1.Favor
	(*Relation)(nil),                                  // 5: domain.feed.v1.Relation
	(*Response)(nil),                                  // 6: domain.feed.v1.Response
	(*BoolResponse)(nil),                              // 7: domain.feed.v1.BoolResponse
	(*CreatePostReq)(nil),                             // 8: domain.feed.v1.CreatePostReq
	(*CreatePostResponse)(nil),                        // 9: domain.feed.v1.CreatePostResponse
	(*UpdatePostReq)(nil),                             // 10: domain.feed.v1.UpdatePostReq
	(*UpdatePostResponse)(nil),                        // 11: domain.feed.v1.UpdatePostResponse
	(*GetPostReq)(nil),                                // 12: domain.feed.v1.GetPostReq
	(*GetPostResponse)(nil),                           // 13: domain.feed.v1.GetPostResponse
	(*ListPostCardReq)(nil),                           // 14: domain.feed.v1.ListPostCardReq
	(*ListPostCardResponse)(nil),                      // 15: domain.feed.v1.ListPostCardResponse
	(*ListPostCardByIdsReq)(nil),                      // 16: domain.feed.v1.ListPostCardByIdsReq
	(*ListPostCardByIdsResponse)(nil),                 // 17: domain.feed.v1.ListPostCardByIdsResponse
	(*ListPostCardByUidReq)(nil),                      // 18: domain.feed.v1.ListPostCardByUidReq
	(*ListPostCardByUidResponse)(nil),                 // 19: domain.feed.v1.ListPostCardByUidResponse
	(*ListTimelinePostCardWithTimestampReq)(nil),      // 20: domain.feed.v1.ListTimelinePostCardWithTimestampReq
	(*ListTimelinePostCardWithTimestampResponse)(nil), // 21: domain.feed.v1.ListTimelinePostCardWithTimestampResponse
	(*DeletePostReq)(nil),                             // 22: domain.feed.v1.DeletePostReq
	(*ListVideoPostReq)(nil),                          // 23: domain.feed.v1.ListVideoPostReq
	(*ListVideoPostResponse)(nil),                     // 24: domain.feed.v1.ListVideoPostResponse
	(*AddFollowReq)(nil),                              // 25: domain.feed.v1.AddFollowReq
	(*CancelFollowReq)(nil),                           // 26: domain.feed.v1.CancelFollowReq
	(*IsFollowReq)(nil),                               // 27: domain.feed.v1.IsFollowReq
	(*ListFollowerReq)(nil),                           // 28: domain.feed.v1.ListFollowerReq
	(*ListFolloweeReq)(nil),                           // 29: domain.feed.v1.ListFolloweeReq
	(*ListFollowerResponse)(nil),                      // 30: domain.feed.v1.ListFollowerResponse
	(*ListFolloweeResponse)(nil),                      // 31: domain.feed.v1.ListFolloweeResponse
	(*GetPostStatReq)(nil),                            // 32: domain.feed.v1.GetPostStatReq
	(*GetPostStatResponse)(nil),                       // 33: domain.feed.v1.GetPostStatResponse
	(*AddLikeReq)(nil),                                // 34: domain.feed.v1.AddLikeReq
	(*CancelLikeReq)(nil),                             // 35: domain.feed.v1.CancelLikeReq
	(*IsLikeReq)(nil),                                 // 36: domain.feed.v1.IsLikeReq
	(*ListLikeByPostReq)(nil),                         // 37: domain.feed.v1.ListLikeByPostReq
	(*ListLikeByPostResponse)(nil),                    // 38: domain.feed.v1.ListLikeByPostResponse
	(*ListLikeByUidReq)(nil),                          // 39: domain.feed.v1.ListLikeByUidReq
	(*ListLikeByUidResponse)(nil),                     // 40: domain.feed.v1.ListLikeByUidResponse
	(*GetLikeCountByPostReq)(nil),                     // 41: domain.feed.v1.GetLikeCountByPostReq
	(*GetLikeCountByPostResponse)(nil),                // 42: domain.feed.v1.GetLikeCountByPostResponse
	(*AddFavorReq)(nil),                               // 43: domain.feed.v1.AddFavorReq
	(*CancelFavorReq)(nil),                            // 44: domain.feed.v1.CancelFavorReq
	(*IsFavorReq)(nil),                                // 45: domain.feed.v1.IsFavorReq
	(*ListFavorByPostReq)(nil),                        // 46: domain.feed.v1.ListFavorByPostReq
	(*ListFavorByPostResponse)(nil),                   // 47: domain.feed.v1.ListFavorByPostResponse
	(*ListFavorByUidReq)(nil),                         // 48: domain.feed.v1.ListFavorByUidReq
	(*ListFavorByUidResponse)(nil),                    // 49: domain.feed.v1.ListFavorByUidResponse
	(*GetFavorCountByPostReq)(nil),                    // 50: domain.feed.v1.GetFavorCountByPostReq
	(*GetFavorCountByPostResponse)(nil),               // 51: domain.feed.v1.GetFavorCountByPostResponse
	(*AddShareReq)(nil),                               // 52: domain.feed.v1.AddShareReq
	(*CancelShareReq)(nil),                            // 53: domain.feed.v1.CancelShareReq
	(*IsShareReq)(nil),                                // 54: domain.feed.v1.IsShareReq
	(*ListShareByPostReq)(nil),                        // 55: domain.feed.v1.ListShareByPostReq
	(*ListShareByPostResponse)(nil),                   // 56: domain.feed.v1.ListShareByPostResponse
	(*ListShareByUidReq)(nil),                         // 57: domain.feed.v1.ListShareByUidReq
	(*ListShareByUidResponse)(nil),                    // 58: domain.feed.v1.ListShareByUidResponse
	(*GetShareCountByPostReq)(nil),                    // 59: domain.feed.v1.GetShareCountByPostReq
	(*GetShareCountByPostResponse)(nil),               // 60: domain.feed.v1.GetShareCountByPostResponse
	(*v1.Image)(nil),                                  // 61: redbookpb.v1.Image
	(*v1.Video)(nil),                                  // 62: redbookpb.v1.Video
	(*v1.Tag)(nil),                                    // 63: redbookpb.v1.Tag
	(*v1.EmptyResponse)(nil),                          // 64: redbookpb.v1.EmptyResponse
	(*v1.BoolResponse)(nil),                           // 65: redbookpb.v1.BoolResponse
}
var file_domain_feed_v1_feed_proto_depIdxs = []int32{
	61, // 0: domain.feed.v1.Post.cover:type_name -> redbookpb.v1.Image
	62, // 1: domain.feed.v1.Post.video:type_name -> redbookpb.v1.Video
	61, // 2: domain.feed.v1.Post.images:type_name -> redbookpb.v1.Image
	63, // 3: domain.feed.v1.Post.tags:type_name -> redbookpb.v1.Tag
	61, // 4: domain.feed.v1.PostCard.cover:type_name -> redbookpb.v1.Image
	63, // 5: domain.feed.v1.PostCard.tags:type_name -> redbookpb.v1.Tag
	0,  // 6: domain.feed.v1.CreatePostReq.post:type_name -> domain.feed.v1.Post
	0,  // 7: domain.feed.v1.UpdatePostReq.post:type_name -> domain.feed.v1.Post
	0,  // 8: domain.feed.v1.GetPostResponse.post:type_name -> domain.feed.v1.Post
	1,  // 9: domain.feed.v1.ListPostCardResponse.postCards:type_name -> domain.feed.v1.PostCard
	1,  // 10: domain.feed.v1.ListPostCardByIdsResponse.postCards:type_name -> domain.feed.v1.PostCard
	1,  // 11: domain.feed.v1.ListPostCardByUidResponse.postCards:type_name -> domain.feed.v1.PostCard
	1,  // 12: domain.feed.v1.ListTimelinePostCardWithTimestampResponse.postCards:type_name -> domain.feed.v1.PostCard
	0,  // 13: domain.feed.v1.ListVideoPostResponse.posts:type_name -> domain.feed.v1.Post
	5,  // 14: domain.feed.v1.ListFollowerResponse.relations:type_name -> domain.feed.v1.Relation
	5,  // 15: domain.feed.v1.ListFolloweeResponse.relations:type_name -> domain.feed.v1.Relation
	2,  // 16: domain.feed.v1.ListLikeByPostResponse.likes:type_name -> domain.feed.v1.Like
	2,  // 17: domain.feed.v1.ListLikeByUidResponse.likes:type_name -> domain.feed.v1.Like
	4,  // 18: domain.feed.v1.ListFavorByPostResponse.favors:type_name -> domain.feed.v1.Favor
	4,  // 19: domain.feed.v1.ListFavorByUidResponse.favors:type_name -> domain.feed.v1.Favor
	3,  // 20: domain.feed.v1.ListShareByPostResponse.shares:type_name -> domain.feed.v1.Share
	3,  // 21: domain.feed.v1.ListShareByUidResponse.shares:type_name -> domain.feed.v1.Share
	8,  // 22: domain.feed.v1.FeedRpc.CreatePost:input_type -> domain.feed.v1.CreatePostReq
	10, // 23: domain.feed.v1.FeedRpc.UpdatePost:input_type -> domain.feed.v1.UpdatePostReq
	12, // 24: domain.feed.v1.FeedRpc.GetPost:input_type -> domain.feed.v1.GetPostReq
	14, // 25: domain.feed.v1.FeedRpc.ListPostCard:input_type -> domain.feed.v1.ListPostCardReq
	16, // 26: domain.feed.v1.FeedRpc.ListPostCardByIds:input_type -> domain.feed.v1.ListPostCardByIdsReq
	18, // 27: domain.feed.v1.FeedRpc.ListPostCardByUid:input_type -> domain.feed.v1.ListPostCardByUidReq
	20, // 28: domain.feed.v1.FeedRpc.ListTimelinePostCardWithTimestamp:input_type -> domain.feed.v1.ListTimelinePostCardWithTimestampReq
	22, // 29: domain.feed.v1.FeedRpc.DeletePost:input_type -> domain.feed.v1.DeletePostReq
	23, // 30: domain.feed.v1.FeedRpc.ListVideoPost:input_type -> domain.feed.v1.ListVideoPostReq
	25, // 31: domain.feed.v1.FeedRpc.AddFollow:input_type -> domain.feed.v1.AddFollowReq
	26, // 32: domain.feed.v1.FeedRpc.CancelFollow:input_type -> domain.feed.v1.CancelFollowReq
	27, // 33: domain.feed.v1.FeedRpc.IsFollow:input_type -> domain.feed.v1.IsFollowReq
	28, // 34: domain.feed.v1.FeedRpc.ListFollower:input_type -> domain.feed.v1.ListFollowerReq
	29, // 35: domain.feed.v1.FeedRpc.ListFollowee:input_type -> domain.feed.v1.ListFolloweeReq
	34, // 36: domain.feed.v1.FeedRpc.AddLike:input_type -> domain.feed.v1.AddLikeReq
	35, // 37: domain.feed.v1.FeedRpc.CancelLike:input_type -> domain.feed.v1.CancelLikeReq
	36, // 38: domain.feed.v1.FeedRpc.IsLike:input_type -> domain.feed.v1.IsLikeReq
	37, // 39: domain.feed.v1.FeedRpc.ListLikeByPost:input_type -> domain.feed.v1.ListLikeByPostReq
	39, // 40: domain.feed.v1.FeedRpc.ListLikeByUid:input_type -> domain.feed.v1.ListLikeByUidReq
	41, // 41: domain.feed.v1.FeedRpc.GetLikeCountByPost:input_type -> domain.feed.v1.GetLikeCountByPostReq
	43, // 42: domain.feed.v1.FeedRpc.AddFavor:input_type -> domain.feed.v1.AddFavorReq
	44, // 43: domain.feed.v1.FeedRpc.CancelFavor:input_type -> domain.feed.v1.CancelFavorReq
	45, // 44: domain.feed.v1.FeedRpc.IsFavor:input_type -> domain.feed.v1.IsFavorReq
	46, // 45: domain.feed.v1.FeedRpc.ListFavorByPost:input_type -> domain.feed.v1.ListFavorByPostReq
	48, // 46: domain.feed.v1.FeedRpc.ListFavorByUid:input_type -> domain.feed.v1.ListFavorByUidReq
	50, // 47: domain.feed.v1.FeedRpc.GetFavorCountByPost:input_type -> domain.feed.v1.GetFavorCountByPostReq
	52, // 48: domain.feed.v1.FeedRpc.AddShare:input_type -> domain.feed.v1.AddShareReq
	53, // 49: domain.feed.v1.FeedRpc.CancelShare:input_type -> domain.feed.v1.CancelShareReq
	54, // 50: domain.feed.v1.FeedRpc.IsShare:input_type -> domain.feed.v1.IsShareReq
	55, // 51: domain.feed.v1.FeedRpc.ListShareByPost:input_type -> domain.feed.v1.ListShareByPostReq
	57, // 52: domain.feed.v1.FeedRpc.ListShareByUid:input_type -> domain.feed.v1.ListShareByUidReq
	59, // 53: domain.feed.v1.FeedRpc.GetShareCountByPost:input_type -> domain.feed.v1.GetShareCountByPostReq
	9,  // 54: domain.feed.v1.FeedRpc.CreatePost:output_type -> domain.feed.v1.CreatePostResponse
	11, // 55: domain.feed.v1.FeedRpc.UpdatePost:output_type -> domain.feed.v1.UpdatePostResponse
	13, // 56: domain.feed.v1.FeedRpc.GetPost:output_type -> domain.feed.v1.GetPostResponse
	15, // 57: domain.feed.v1.FeedRpc.ListPostCard:output_type -> domain.feed.v1.ListPostCardResponse
	17, // 58: domain.feed.v1.FeedRpc.ListPostCardByIds:output_type -> domain.feed.v1.ListPostCardByIdsResponse
	19, // 59: domain.feed.v1.FeedRpc.ListPostCardByUid:output_type -> domain.feed.v1.ListPostCardByUidResponse
	21, // 60: domain.feed.v1.FeedRpc.ListTimelinePostCardWithTimestamp:output_type -> domain.feed.v1.ListTimelinePostCardWithTimestampResponse
	64, // 61: domain.feed.v1.FeedRpc.DeletePost:output_type -> redbookpb.v1.EmptyResponse
	24, // 62: domain.feed.v1.FeedRpc.ListVideoPost:output_type -> domain.feed.v1.ListVideoPostResponse
	64, // 63: domain.feed.v1.FeedRpc.AddFollow:output_type -> redbookpb.v1.EmptyResponse
	64, // 64: domain.feed.v1.FeedRpc.CancelFollow:output_type -> redbookpb.v1.EmptyResponse
	65, // 65: domain.feed.v1.FeedRpc.IsFollow:output_type -> redbookpb.v1.BoolResponse
	30, // 66: domain.feed.v1.FeedRpc.ListFollower:output_type -> domain.feed.v1.ListFollowerResponse
	31, // 67: domain.feed.v1.FeedRpc.ListFollowee:output_type -> domain.feed.v1.ListFolloweeResponse
	64, // 68: domain.feed.v1.FeedRpc.AddLike:output_type -> redbookpb.v1.EmptyResponse
	64, // 69: domain.feed.v1.FeedRpc.CancelLike:output_type -> redbookpb.v1.EmptyResponse
	65, // 70: domain.feed.v1.FeedRpc.IsLike:output_type -> redbookpb.v1.BoolResponse
	38, // 71: domain.feed.v1.FeedRpc.ListLikeByPost:output_type -> domain.feed.v1.ListLikeByPostResponse
	40, // 72: domain.feed.v1.FeedRpc.ListLikeByUid:output_type -> domain.feed.v1.ListLikeByUidResponse
	42, // 73: domain.feed.v1.FeedRpc.GetLikeCountByPost:output_type -> domain.feed.v1.GetLikeCountByPostResponse
	64, // 74: domain.feed.v1.FeedRpc.AddFavor:output_type -> redbookpb.v1.EmptyResponse
	64, // 75: domain.feed.v1.FeedRpc.CancelFavor:output_type -> redbookpb.v1.EmptyResponse
	65, // 76: domain.feed.v1.FeedRpc.IsFavor:output_type -> redbookpb.v1.BoolResponse
	47, // 77: domain.feed.v1.FeedRpc.ListFavorByPost:output_type -> domain.feed.v1.ListFavorByPostResponse
	49, // 78: domain.feed.v1.FeedRpc.ListFavorByUid:output_type -> domain.feed.v1.ListFavorByUidResponse
	51, // 79: domain.feed.v1.FeedRpc.GetFavorCountByPost:output_type -> domain.feed.v1.GetFavorCountByPostResponse
	64, // 80: domain.feed.v1.FeedRpc.AddShare:output_type -> redbookpb.v1.EmptyResponse
	64, // 81: domain.feed.v1.FeedRpc.CancelShare:output_type -> redbookpb.v1.EmptyResponse
	65, // 82: domain.feed.v1.FeedRpc.IsShare:output_type -> redbookpb.v1.BoolResponse
	56, // 83: domain.feed.v1.FeedRpc.ListShareByPost:output_type -> domain.feed.v1.ListShareByPostResponse
	58, // 84: domain.feed.v1.FeedRpc.ListShareByUid:output_type -> domain.feed.v1.ListShareByUidResponse
	60, // 85: domain.feed.v1.FeedRpc.GetShareCountByPost:output_type -> domain.feed.v1.GetShareCountByPostResponse
	54, // [54:86] is the sub-list for method output_type
	22, // [22:54] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_domain_feed_v1_feed_proto_init() }
func file_domain_feed_v1_feed_proto_init() {
	if File_domain_feed_v1_feed_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_feed_v1_feed_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Like); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Share); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Favor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostCardByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostCardByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostCardByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostCardByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimelinePostCardWithTimestampReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimelinePostCardWithTimestampResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVideoPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVideoPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFollowerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFolloweeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFollowerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFolloweeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPostStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLikeByPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLikeByPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLikeByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLikeByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikeCountByPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikeCountByPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFavorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelFavorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFavorByPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFavorByPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFavorByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFavorByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavorCountByPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavorCountByPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareByPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareByPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShareByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareCountByPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_feed_v1_feed_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareCountByPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_feed_v1_feed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_feed_v1_feed_proto_goTypes,
		DependencyIndexes: file_domain_feed_v1_feed_proto_depIdxs,
		MessageInfos:      file_domain_feed_v1_feed_proto_msgTypes,
	}.Build()
	File_domain_feed_v1_feed_proto = out.File
	file_domain_feed_v1_feed_proto_rawDesc = nil
	file_domain_feed_v1_feed_proto_goTypes = nil
	file_domain_feed_v1_feed_proto_depIdxs = nil
}
