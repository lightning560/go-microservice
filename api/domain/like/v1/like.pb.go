// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: domain/like/v1/like.proto

package likev1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *LikeReq) Reset() {
	*x = LikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeReq) ProtoMessage() {}

func (x *LikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeReq.ProtoReflect.Descriptor instead.
func (*LikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{0}
}

func (x *LikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *LikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *LikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *LikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type LikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mid      int64  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid      int64  `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid      int64  `protobuf:"varint,4,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid      int64  `protobuf:"varint,5,opt,name=sid,proto3" json:"sid,omitempty"`
	Like     int64  `protobuf:"varint,6,opt,name=like,proto3" json:"like,omitempty"`
	CreateAt int64  `protobuf:"varint,7,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt int64  `protobuf:"varint,8,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
}

func (x *LikeReply) Reset() {
	*x = LikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeReply) ProtoMessage() {}

func (x *LikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeReply.ProtoReflect.Descriptor instead.
func (*LikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{1}
}

func (x *LikeReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LikeReply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *LikeReply) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *LikeReply) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *LikeReply) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *LikeReply) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *LikeReply) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *LikeReply) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type LikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikesReq []*LikeReq `protobuf:"bytes,1,rep,name=likesReq,proto3" json:"likesReq,omitempty"`
}

func (x *LikesReq) Reset() {
	*x = LikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikesReq) ProtoMessage() {}

func (x *LikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikesReq.ProtoReflect.Descriptor instead.
func (*LikesReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{2}
}

func (x *LikesReq) GetLikesReq() []*LikeReq {
	if x != nil {
		return x.LikesReq
	}
	return nil
}

type LikesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikesReply []*LikeReply `protobuf:"bytes,1,rep,name=likesReply,proto3" json:"likesReply,omitempty"`
}

func (x *LikesReply) Reset() {
	*x = LikesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikesReply) ProtoMessage() {}

func (x *LikesReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikesReply.ProtoReflect.Descriptor instead.
func (*LikesReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{3}
}

func (x *LikesReply) GetLikesReply() []*LikeReply {
	if x != nil {
		return x.LikesReply
	}
	return nil
}

type SubjectLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *SubjectLikesReq) Reset() {
	*x = SubjectLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectLikesReq) ProtoMessage() {}

func (x *SubjectLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectLikesReq.ProtoReflect.Descriptor instead.
func (*SubjectLikesReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{4}
}

func (x *SubjectLikesReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *SubjectLikesReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SubjectLikesReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *SubjectLikesReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type SubjectLikesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectLikeList []*LikeReply `protobuf:"bytes,1,rep,name=subjectLikeList,proto3" json:"subjectLikeList,omitempty"`
}

func (x *SubjectLikesReply) Reset() {
	*x = SubjectLikesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectLikesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectLikesReply) ProtoMessage() {}

func (x *SubjectLikesReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectLikesReply.ProtoReflect.Descriptor instead.
func (*SubjectLikesReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{5}
}

func (x *SubjectLikesReply) GetSubjectLikeList() []*LikeReply {
	if x != nil {
		return x.SubjectLikeList
	}
	return nil
}

type CountSubjectLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CountSubjectLikeReq) Reset() {
	*x = CountSubjectLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubjectLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubjectLikeReq) ProtoMessage() {}

func (x *CountSubjectLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubjectLikeReq.ProtoReflect.Descriptor instead.
func (*CountSubjectLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{6}
}

func (x *CountSubjectLikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CountSubjectLikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CountSubjectLikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *CountSubjectLikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type CountSubjectLikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
	Count int64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountSubjectLikeReply) Reset() {
	*x = CountSubjectLikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubjectLikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubjectLikeReply) ProtoMessage() {}

func (x *CountSubjectLikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubjectLikeReply.ProtoReflect.Descriptor instead.
func (*CountSubjectLikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{7}
}

func (x *CountSubjectLikeReply) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *CountSubjectLikeReply) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountObjectLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CountObjectLikeReq) Reset() {
	*x = CountObjectLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountObjectLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountObjectLikeReq) ProtoMessage() {}

func (x *CountObjectLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountObjectLikeReq.ProtoReflect.Descriptor instead.
func (*CountObjectLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{8}
}

func (x *CountObjectLikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CountObjectLikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CountObjectLikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *CountObjectLikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type CountObjectLikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid   int64 `protobuf:"varint,4,opt,name=oid,proto3" json:"oid,omitempty"`
	Count int64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountObjectLikeReply) Reset() {
	*x = CountObjectLikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountObjectLikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountObjectLikeReply) ProtoMessage() {}

func (x *CountObjectLikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountObjectLikeReply.ProtoReflect.Descriptor instead.
func (*CountObjectLikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{9}
}

func (x *CountObjectLikeReply) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CountObjectLikeReply) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountUserLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CountUserLikeReq) Reset() {
	*x = CountUserLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserLikeReq) ProtoMessage() {}

func (x *CountUserLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserLikeReq.ProtoReflect.Descriptor instead.
func (*CountUserLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{10}
}

func (x *CountUserLikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CountUserLikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CountUserLikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *CountUserLikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type CountUserLikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   int64 `protobuf:"varint,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Count int64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountUserLikeReply) Reset() {
	*x = CountUserLikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserLikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserLikeReply) ProtoMessage() {}

func (x *CountUserLikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserLikeReply.ProtoReflect.Descriptor instead.
func (*CountUserLikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{11}
}

func (x *CountUserLikeReply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CountUserLikeReply) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UserLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *UserLikesReq) Reset() {
	*x = UserLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLikesReq) ProtoMessage() {}

func (x *UserLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLikesReq.ProtoReflect.Descriptor instead.
func (*UserLikesReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{12}
}

func (x *UserLikesReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type UserLikesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectLikeList []*LikeReply `protobuf:"bytes,1,rep,name=subjectLikeList,proto3" json:"subjectLikeList,omitempty"`
}

func (x *UserLikesReply) Reset() {
	*x = UserLikesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLikesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLikesReply) ProtoMessage() {}

func (x *UserLikesReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLikesReply.ProtoReflect.Descriptor instead.
func (*UserLikesReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{13}
}

func (x *UserLikesReply) GetSubjectLikeList() []*LikeReply {
	if x != nil {
		return x.SubjectLikeList
	}
	return nil
}

type AddLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *AddLikeReq) Reset() {
	*x = AddLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeReq) ProtoMessage() {}

func (x *AddLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeReq.ProtoReflect.Descriptor instead.
func (*AddLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{14}
}

func (x *AddLikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *AddLikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *AddLikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *AddLikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type AddLikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddLikeReply) Reset() {
	*x = AddLikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLikeReply) ProtoMessage() {}

func (x *AddLikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLikeReply.ProtoReflect.Descriptor instead.
func (*AddLikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{15}
}

type CancelLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelLikeReq) Reset() {
	*x = CancelLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLikeReq) ProtoMessage() {}

func (x *CancelLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLikeReq.ProtoReflect.Descriptor instead.
func (*CancelLikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{16}
}

type CancelLikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelLikeReply) Reset() {
	*x = CancelLikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLikeReply) ProtoMessage() {}

func (x *CancelLikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLikeReply.ProtoReflect.Descriptor instead.
func (*CancelLikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{17}
}

type DislikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *DislikeReq) Reset() {
	*x = DislikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeReq) ProtoMessage() {}

func (x *DislikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeReq.ProtoReflect.Descriptor instead.
func (*DislikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{18}
}

func (x *DislikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DislikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *DislikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *DislikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type DislikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mid      int64  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid      int64  `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid      int64  `protobuf:"varint,4,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid      int64  `protobuf:"varint,5,opt,name=sid,proto3" json:"sid,omitempty"`
	Dislike  int64  `protobuf:"varint,6,opt,name=dislike,proto3" json:"dislike,omitempty"`
	CreateAt int64  `protobuf:"varint,7,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt int64  `protobuf:"varint,8,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
}

func (x *DislikeReply) Reset() {
	*x = DislikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeReply) ProtoMessage() {}

func (x *DislikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeReply.ProtoReflect.Descriptor instead.
func (*DislikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{19}
}

func (x *DislikeReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DislikeReply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DislikeReply) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *DislikeReply) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *DislikeReply) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *DislikeReply) GetDislike() int64 {
	if x != nil {
		return x.Dislike
	}
	return 0
}

func (x *DislikeReply) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *DislikeReply) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type DislikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DislikesReq []*DislikeReq `protobuf:"bytes,1,rep,name=dislikesReq,proto3" json:"dislikesReq,omitempty"`
}

func (x *DislikesReq) Reset() {
	*x = DislikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikesReq) ProtoMessage() {}

func (x *DislikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikesReq.ProtoReflect.Descriptor instead.
func (*DislikesReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{20}
}

func (x *DislikesReq) GetDislikesReq() []*DislikeReq {
	if x != nil {
		return x.DislikesReq
	}
	return nil
}

type DislikesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DislikeReply []*DislikesReply `protobuf:"bytes,1,rep,name=DislikeReply,proto3" json:"DislikeReply,omitempty"`
}

func (x *DislikesReply) Reset() {
	*x = DislikesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikesReply) ProtoMessage() {}

func (x *DislikesReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikesReply.ProtoReflect.Descriptor instead.
func (*DislikesReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{21}
}

func (x *DislikesReply) GetDislikeReply() []*DislikesReply {
	if x != nil {
		return x.DislikeReply
	}
	return nil
}

type SubjectDislikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *SubjectDislikesReq) Reset() {
	*x = SubjectDislikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectDislikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDislikesReq) ProtoMessage() {}

func (x *SubjectDislikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDislikesReq.ProtoReflect.Descriptor instead.
func (*SubjectDislikesReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{22}
}

func (x *SubjectDislikesReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *SubjectDislikesReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SubjectDislikesReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *SubjectDislikesReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type SubjectDislikesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectLikeList []*LikeReply `protobuf:"bytes,1,rep,name=SubjectLikeList,proto3" json:"SubjectLikeList,omitempty"`
}

func (x *SubjectDislikesReply) Reset() {
	*x = SubjectDislikesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectDislikesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDislikesReply) ProtoMessage() {}

func (x *SubjectDislikesReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDislikesReply.ProtoReflect.Descriptor instead.
func (*SubjectDislikesReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{23}
}

func (x *SubjectDislikesReply) GetSubjectLikeList() []*LikeReply {
	if x != nil {
		return x.SubjectLikeList
	}
	return nil
}

type UserDislikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *UserDislikesReq) Reset() {
	*x = UserDislikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDislikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDislikesReq) ProtoMessage() {}

func (x *UserDislikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDislikesReq.ProtoReflect.Descriptor instead.
func (*UserDislikesReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{24}
}

func (x *UserDislikesReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UserDislikesReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *UserDislikesReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *UserDislikesReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type UserDislikesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserDislikesReply) Reset() {
	*x = UserDislikesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDislikesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDislikesReply) ProtoMessage() {}

func (x *UserDislikesReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDislikesReply.ProtoReflect.Descriptor instead.
func (*UserDislikesReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{25}
}

type CountSubjectDislikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Bid int64 `protobuf:"varint,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Sid int64 `protobuf:"varint,4,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CountSubjectDislikeReq) Reset() {
	*x = CountSubjectDislikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubjectDislikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubjectDislikeReq) ProtoMessage() {}

func (x *CountSubjectDislikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubjectDislikeReq.ProtoReflect.Descriptor instead.
func (*CountSubjectDislikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{26}
}

func (x *CountSubjectDislikeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CountSubjectDislikeReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CountSubjectDislikeReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *CountSubjectDislikeReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type CountSubjectDislikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountSubjectDislikeReply) Reset() {
	*x = CountSubjectDislikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountSubjectDislikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSubjectDislikeReply) ProtoMessage() {}

func (x *CountSubjectDislikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSubjectDislikeReply.ProtoReflect.Descriptor instead.
func (*CountSubjectDislikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{27}
}

type CountObjectDislikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountObjectDislikeReq) Reset() {
	*x = CountObjectDislikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountObjectDislikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountObjectDislikeReq) ProtoMessage() {}

func (x *CountObjectDislikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountObjectDislikeReq.ProtoReflect.Descriptor instead.
func (*CountObjectDislikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{28}
}

type CountObjectDislikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountObjectDislikeReply) Reset() {
	*x = CountObjectDislikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountObjectDislikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountObjectDislikeReply) ProtoMessage() {}

func (x *CountObjectDislikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountObjectDislikeReply.ProtoReflect.Descriptor instead.
func (*CountObjectDislikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{29}
}

type CountUserDislikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountUserDislikeReq) Reset() {
	*x = CountUserDislikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserDislikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserDislikeReq) ProtoMessage() {}

func (x *CountUserDislikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserDislikeReq.ProtoReflect.Descriptor instead.
func (*CountUserDislikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{30}
}

type CountUserDislikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountUserDislikeReply) Reset() {
	*x = CountUserDislikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserDislikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserDislikeReply) ProtoMessage() {}

func (x *CountUserDislikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserDislikeReply.ProtoReflect.Descriptor instead.
func (*CountUserDislikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{31}
}

type AddDislikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDislikeReq) Reset() {
	*x = AddDislikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDislikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDislikeReq) ProtoMessage() {}

func (x *AddDislikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDislikeReq.ProtoReflect.Descriptor instead.
func (*AddDislikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{32}
}

type AddDislikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDislikeReply) Reset() {
	*x = AddDislikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDislikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDislikeReply) ProtoMessage() {}

func (x *AddDislikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDislikeReply.ProtoReflect.Descriptor instead.
func (*AddDislikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{33}
}

type CancelDislikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelDislikeReq) Reset() {
	*x = CancelDislikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelDislikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDislikeReq) ProtoMessage() {}

func (x *CancelDislikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDislikeReq.ProtoReflect.Descriptor instead.
func (*CancelDislikeReq) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{34}
}

type CancelDislikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelDislikeReply) Reset() {
	*x = CancelDislikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_like_v1_like_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelDislikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDislikeReply) ProtoMessage() {}

func (x *CancelDislikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_domain_like_v1_like_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDislikeReply.ProtoReflect.Descriptor instead.
func (*CancelDislikeReply) Descriptor() ([]byte, []int) {
	return file_domain_like_v1_like_proto_rawDescGZIP(), []int{35}
}

var File_domain_like_v1_like_proto protoreflect.FileDescriptor

var file_domain_like_v1_like_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c,
	0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69,
	0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x85, 0x02, 0x0a,
	0x09, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xea, 0xde, 0x1f, 0x02, 0x69, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x03, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03,
	0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03,
	0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xea, 0xde,
	0x1f, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x2a, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xea, 0xde, 0x1f,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x22, 0x3f, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x33, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x47, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7d,
	0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f,
	0x69, 0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x58, 0x0a,
	0x11, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde,
	0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea,
	0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09,
	0xea, 0xde, 0x1f, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x80, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03,
	0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69,
	0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69,
	0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73,
	0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03,
	0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69,
	0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x22, 0x11, 0x0a,
	0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x7f, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xea, 0xde, 0x1f,
	0x03, 0x6d, 0x69, 0x64, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea,
	0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69,
	0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x22, 0x91, 0x02, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xea, 0xde, 0x1f, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea,
	0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69,
	0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x64, 0x69, 0x73,
	0x6c, 0x69, 0x6b, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x2a, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xea, 0xde,
	0x1f, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x4b, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x22, 0x64, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x0c, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde,
	0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea,
	0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x14, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7d, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69,
	0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xea, 0xde, 0x1f, 0x03, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73,
	0x69, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x84, 0x01, 0x0a,
	0x16, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73,
	0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xea, 0xde, 0x1f, 0x03, 0x6f, 0x69, 0x64, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03,
	0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x69, 0x64, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x17, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x22, 0x14, 0x0a, 0x12, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x32, 0xd2, 0x0b, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x4c, 0x69,
	0x6b, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12,
	0x18, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c,
	0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x55, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x6b, 0x65, 0x12, 0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x23, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c,
	0x69, 0x6b, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a,
	0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x07, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x46, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x52, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x25, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x10, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12,
	0x23, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x67, 0x0a, 0x13, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x44, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x4c, 0x69,
	0x6b, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x72, 0x65, 0x64, 0x62, 0x6f,
	0x6f, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6c, 0x69,
	0x6b, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x69, 0x6b, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_like_v1_like_proto_rawDescOnce sync.Once
	file_domain_like_v1_like_proto_rawDescData = file_domain_like_v1_like_proto_rawDesc
)

func file_domain_like_v1_like_proto_rawDescGZIP() []byte {
	file_domain_like_v1_like_proto_rawDescOnce.Do(func() {
		file_domain_like_v1_like_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_like_v1_like_proto_rawDescData)
	})
	return file_domain_like_v1_like_proto_rawDescData
}

var file_domain_like_v1_like_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_domain_like_v1_like_proto_goTypes = []interface{}{
	(*LikeReq)(nil),                  // 0: domain.like.v1.LikeReq
	(*LikeReply)(nil),                // 1: domain.like.v1.LikeReply
	(*LikesReq)(nil),                 // 2: domain.like.v1.LikesReq
	(*LikesReply)(nil),               // 3: domain.like.v1.LikesReply
	(*SubjectLikesReq)(nil),          // 4: domain.like.v1.SubjectLikesReq
	(*SubjectLikesReply)(nil),        // 5: domain.like.v1.SubjectLikesReply
	(*CountSubjectLikeReq)(nil),      // 6: domain.like.v1.CountSubjectLikeReq
	(*CountSubjectLikeReply)(nil),    // 7: domain.like.v1.CountSubjectLikeReply
	(*CountObjectLikeReq)(nil),       // 8: domain.like.v1.CountObjectLikeReq
	(*CountObjectLikeReply)(nil),     // 9: domain.like.v1.CountObjectLikeReply
	(*CountUserLikeReq)(nil),         // 10: domain.like.v1.CountUserLikeReq
	(*CountUserLikeReply)(nil),       // 11: domain.like.v1.CountUserLikeReply
	(*UserLikesReq)(nil),             // 12: domain.like.v1.UserLikesReq
	(*UserLikesReply)(nil),           // 13: domain.like.v1.UserLikesReply
	(*AddLikeReq)(nil),               // 14: domain.like.v1.AddLikeReq
	(*AddLikeReply)(nil),             // 15: domain.like.v1.AddLikeReply
	(*CancelLikeReq)(nil),            // 16: domain.like.v1.CancelLikeReq
	(*CancelLikeReply)(nil),          // 17: domain.like.v1.CancelLikeReply
	(*DislikeReq)(nil),               // 18: domain.like.v1.DislikeReq
	(*DislikeReply)(nil),             // 19: domain.like.v1.DislikeReply
	(*DislikesReq)(nil),              // 20: domain.like.v1.DislikesReq
	(*DislikesReply)(nil),            // 21: domain.like.v1.DislikesReply
	(*SubjectDislikesReq)(nil),       // 22: domain.like.v1.SubjectDislikesReq
	(*SubjectDislikesReply)(nil),     // 23: domain.like.v1.SubjectDislikesReply
	(*UserDislikesReq)(nil),          // 24: domain.like.v1.UserDislikesReq
	(*UserDislikesReply)(nil),        // 25: domain.like.v1.UserDislikesReply
	(*CountSubjectDislikeReq)(nil),   // 26: domain.like.v1.CountSubjectDislikeReq
	(*CountSubjectDislikeReply)(nil), // 27: domain.like.v1.CountSubjectDislikeReply
	(*CountObjectDislikeReq)(nil),    // 28: domain.like.v1.CountObjectDislikeReq
	(*CountObjectDislikeReply)(nil),  // 29: domain.like.v1.CountObjectDislikeReply
	(*CountUserDislikeReq)(nil),      // 30: domain.like.v1.CountUserDislikeReq
	(*CountUserDislikeReply)(nil),    // 31: domain.like.v1.CountUserDislikeReply
	(*AddDislikeReq)(nil),            // 32: domain.like.v1.AddDislikeReq
	(*AddDislikeReply)(nil),          // 33: domain.like.v1.AddDislikeReply
	(*CancelDislikeReq)(nil),         // 34: domain.like.v1.CancelDislikeReq
	(*CancelDislikeReply)(nil),       // 35: domain.like.v1.CancelDislikeReply
}
var file_domain_like_v1_like_proto_depIdxs = []int32{
	0,  // 0: domain.like.v1.LikesReq.likesReq:type_name -> domain.like.v1.LikeReq
	1,  // 1: domain.like.v1.LikesReply.likesReply:type_name -> domain.like.v1.LikeReply
	1,  // 2: domain.like.v1.SubjectLikesReply.subjectLikeList:type_name -> domain.like.v1.LikeReply
	1,  // 3: domain.like.v1.UserLikesReply.subjectLikeList:type_name -> domain.like.v1.LikeReply
	18, // 4: domain.like.v1.DislikesReq.dislikesReq:type_name -> domain.like.v1.DislikeReq
	21, // 5: domain.like.v1.DislikesReply.DislikeReply:type_name -> domain.like.v1.DislikesReply
	1,  // 6: domain.like.v1.SubjectDislikesReply.SubjectLikeList:type_name -> domain.like.v1.LikeReply
	0,  // 7: domain.like.v1.Like.Like:input_type -> domain.like.v1.LikeReq
	2,  // 8: domain.like.v1.Like.Likes:input_type -> domain.like.v1.LikesReq
	4,  // 9: domain.like.v1.Like.SubjectLikes:input_type -> domain.like.v1.SubjectLikesReq
	12, // 10: domain.like.v1.Like.UserLikes:input_type -> domain.like.v1.UserLikesReq
	8,  // 11: domain.like.v1.Like.CountObjectLike:input_type -> domain.like.v1.CountObjectLikeReq
	10, // 12: domain.like.v1.Like.CountUserLike:input_type -> domain.like.v1.CountUserLikeReq
	6,  // 13: domain.like.v1.Like.CountSubjectLike:input_type -> domain.like.v1.CountSubjectLikeReq
	14, // 14: domain.like.v1.Like.AddLike:input_type -> domain.like.v1.AddLikeReq
	16, // 15: domain.like.v1.Like.CancelLike:input_type -> domain.like.v1.CancelLikeReq
	18, // 16: domain.like.v1.Like.Dislike:input_type -> domain.like.v1.DislikeReq
	20, // 17: domain.like.v1.Like.Dislikes:input_type -> domain.like.v1.DislikesReq
	4,  // 18: domain.like.v1.Like.SubjectDisikes:input_type -> domain.like.v1.SubjectLikesReq
	24, // 19: domain.like.v1.Like.UserDislikes:input_type -> domain.like.v1.UserDislikesReq
	28, // 20: domain.like.v1.Like.CountObjectDislike:input_type -> domain.like.v1.CountObjectDislikeReq
	30, // 21: domain.like.v1.Like.CountUserDislike:input_type -> domain.like.v1.CountUserDislikeReq
	26, // 22: domain.like.v1.Like.CountSubjectDislike:input_type -> domain.like.v1.CountSubjectDislikeReq
	32, // 23: domain.like.v1.Like.AddDislike:input_type -> domain.like.v1.AddDislikeReq
	16, // 24: domain.like.v1.Like.CancelDislike:input_type -> domain.like.v1.CancelLikeReq
	1,  // 25: domain.like.v1.Like.Like:output_type -> domain.like.v1.LikeReply
	3,  // 26: domain.like.v1.Like.Likes:output_type -> domain.like.v1.LikesReply
	5,  // 27: domain.like.v1.Like.SubjectLikes:output_type -> domain.like.v1.SubjectLikesReply
	13, // 28: domain.like.v1.Like.UserLikes:output_type -> domain.like.v1.UserLikesReply
	9,  // 29: domain.like.v1.Like.CountObjectLike:output_type -> domain.like.v1.CountObjectLikeReply
	11, // 30: domain.like.v1.Like.CountUserLike:output_type -> domain.like.v1.CountUserLikeReply
	7,  // 31: domain.like.v1.Like.CountSubjectLike:output_type -> domain.like.v1.CountSubjectLikeReply
	15, // 32: domain.like.v1.Like.AddLike:output_type -> domain.like.v1.AddLikeReply
	17, // 33: domain.like.v1.Like.CancelLike:output_type -> domain.like.v1.CancelLikeReply
	19, // 34: domain.like.v1.Like.Dislike:output_type -> domain.like.v1.DislikeReply
	21, // 35: domain.like.v1.Like.Dislikes:output_type -> domain.like.v1.DislikesReply
	23, // 36: domain.like.v1.Like.SubjectDisikes:output_type -> domain.like.v1.SubjectDislikesReply
	25, // 37: domain.like.v1.Like.UserDislikes:output_type -> domain.like.v1.UserDislikesReply
	29, // 38: domain.like.v1.Like.CountObjectDislike:output_type -> domain.like.v1.CountObjectDislikeReply
	31, // 39: domain.like.v1.Like.CountUserDislike:output_type -> domain.like.v1.CountUserDislikeReply
	27, // 40: domain.like.v1.Like.CountSubjectDislike:output_type -> domain.like.v1.CountSubjectDislikeReply
	33, // 41: domain.like.v1.Like.AddDislike:output_type -> domain.like.v1.AddDislikeReply
	35, // 42: domain.like.v1.Like.CancelDislike:output_type -> domain.like.v1.CancelDislikeReply
	25, // [25:43] is the sub-list for method output_type
	7,  // [7:25] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_domain_like_v1_like_proto_init() }
func file_domain_like_v1_like_proto_init() {
	if File_domain_like_v1_like_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_like_v1_like_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectLikesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubjectLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubjectLikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountObjectLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountObjectLikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserLikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLikesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectDislikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectDislikesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDislikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDislikesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubjectDislikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountSubjectDislikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountObjectDislikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountObjectDislikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserDislikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserDislikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDislikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDislikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelDislikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_like_v1_like_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelDislikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_like_v1_like_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_like_v1_like_proto_goTypes,
		DependencyIndexes: file_domain_like_v1_like_proto_depIdxs,
		MessageInfos:      file_domain_like_v1_like_proto_msgTypes,
	}.Build()
	File_domain_like_v1_like_proto = out.File
	file_domain_like_v1_like_proto_rawDesc = nil
	file_domain_like_v1_like_proto_goTypes = nil
	file_domain_like_v1_like_proto_depIdxs = nil
}
