// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: domain/mall/v1/mall.proto

package domainmallv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "redbook/api/redbookpb/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderState int32

const (
	OrderState_ORDER_STATE_UNKNOWN   OrderState = 0
	OrderState_ORDER_STATE_CREATED   OrderState = 1
	OrderState_ORDER_STATE_PAID      OrderState = 2
	OrderState_ORDER_STATE_DELIVERED OrderState = 3
	OrderState_ORDER_STATE_RECEIVED  OrderState = 4
	OrderState_ORDER_STATE_REFUNDING OrderState = 5
	OrderState_ORDER_STATE_REFUNDED  OrderState = 6
	OrderState_ORDER_STATE_CANCELED  OrderState = 7
	OrderState_ORDER_STATE_FINISHED  OrderState = 8
)

// Enum value maps for OrderState.
var (
	OrderState_name = map[int32]string{
		0: "ORDER_STATE_UNKNOWN",
		1: "ORDER_STATE_CREATED",
		2: "ORDER_STATE_PAID",
		3: "ORDER_STATE_DELIVERED",
		4: "ORDER_STATE_RECEIVED",
		5: "ORDER_STATE_REFUNDING",
		6: "ORDER_STATE_REFUNDED",
		7: "ORDER_STATE_CANCELED",
		8: "ORDER_STATE_FINISHED",
	}
	OrderState_value = map[string]int32{
		"ORDER_STATE_UNKNOWN":   0,
		"ORDER_STATE_CREATED":   1,
		"ORDER_STATE_PAID":      2,
		"ORDER_STATE_DELIVERED": 3,
		"ORDER_STATE_RECEIVED":  4,
		"ORDER_STATE_REFUNDING": 5,
		"ORDER_STATE_REFUNDED":  6,
		"ORDER_STATE_CANCELED":  7,
		"ORDER_STATE_FINISHED":  8,
	}
)

func (x OrderState) Enum() *OrderState {
	p := new(OrderState)
	*p = x
	return p
}

func (x OrderState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderState) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_mall_v1_mall_proto_enumTypes[0].Descriptor()
}

func (OrderState) Type() protoreflect.EnumType {
	return &file_domain_mall_v1_mall_proto_enumTypes[0]
}

func (x OrderState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderState.Descriptor instead.
func (OrderState) EnumDescriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{0}
}

type OrderAction int32

const (
	OrderAction_ORDER_ACTION_UNKNOWN OrderAction = 0
	OrderAction_ORDER_ACTION_PAY     OrderAction = 1
	OrderAction_ORDER_ACTION_DELIVER OrderAction = 2
	OrderAction_ORDER_ACTION_RECEIVE OrderAction = 3
	OrderAction_ORDER_ACTION_REFUND  OrderAction = 4
	OrderAction_ORDER_ACTION_CANCEL  OrderAction = 5
	OrderAction_ORDER_ACTION_FINISH  OrderAction = 6
)

// Enum value maps for OrderAction.
var (
	OrderAction_name = map[int32]string{
		0: "ORDER_ACTION_UNKNOWN",
		1: "ORDER_ACTION_PAY",
		2: "ORDER_ACTION_DELIVER",
		3: "ORDER_ACTION_RECEIVE",
		4: "ORDER_ACTION_REFUND",
		5: "ORDER_ACTION_CANCEL",
		6: "ORDER_ACTION_FINISH",
	}
	OrderAction_value = map[string]int32{
		"ORDER_ACTION_UNKNOWN": 0,
		"ORDER_ACTION_PAY":     1,
		"ORDER_ACTION_DELIVER": 2,
		"ORDER_ACTION_RECEIVE": 3,
		"ORDER_ACTION_REFUND":  4,
		"ORDER_ACTION_CANCEL":  5,
		"ORDER_ACTION_FINISH":  6,
	}
)

func (x OrderAction) Enum() *OrderAction {
	p := new(OrderAction)
	*p = x
	return p
}

func (x OrderAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderAction) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_mall_v1_mall_proto_enumTypes[1].Descriptor()
}

func (OrderAction) Type() protoreflect.EnumType {
	return &file_domain_mall_v1_mall_proto_enumTypes[1]
}

func (x OrderAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderAction.Descriptor instead.
func (OrderAction) EnumDescriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{1}
}

type Shop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64     `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name      string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sign      string    `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	Logo      *v1.Image `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	State     int32     `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt int64     `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Shop) Reset() {
	*x = Shop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shop) ProtoMessage() {}

func (x *Shop) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shop.ProtoReflect.Descriptor instead.
func (*Shop) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{0}
}

func (x *Shop) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Shop) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Shop) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Shop) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Shop) GetLogo() *v1.Image {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *Shop) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Shop) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShopId    int64       `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name      string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title     string      `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Price     int64       `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Thumb     *v1.Image   `protobuf:"bytes,6,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Images    []*v1.Image `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
	Video     *v1.Video   `protobuf:"bytes,8,opt,name=video,proto3" json:"video,omitempty"`
	Overview  []*v1.Image `protobuf:"bytes,9,rep,name=overview,proto3" json:"overview,omitempty"`
	Specs     string      `protobuf:"bytes,10,opt,name=specs,proto3" json:"specs,omitempty"`
	Tags      []*v1.Tag   `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	Inventory int32       `protobuf:"varint,12,opt,name=Inventory,proto3" json:"Inventory,omitempty"`
	State     int32       `protobuf:"varint,13,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt int64       `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64       `protobuf:"varint,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PublishAt int64       `protobuf:"varint,16,opt,name=publish_at,json=publishAt,proto3" json:"publish_at,omitempty"`
	Version   int32       `protobuf:"varint,17,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{1}
}

func (x *Product) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Product) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetThumb() *v1.Image {
	if x != nil {
		return x.Thumb
	}
	return nil
}

func (x *Product) GetImages() []*v1.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Product) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Product) GetOverview() []*v1.Image {
	if x != nil {
		return x.Overview
	}
	return nil
}

func (x *Product) GetSpecs() string {
	if x != nil {
		return x.Specs
	}
	return ""
}

func (x *Product) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Product) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *Product) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Product) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Product) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Product) GetPublishAt() int64 {
	if x != nil {
		return x.PublishAt
	}
	return 0
}

func (x *Product) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CreateProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId    int64       `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Title     string      `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Price     int64       `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Thumb     *v1.Image   `protobuf:"bytes,5,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Images    []*v1.Image `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
	Video     *v1.Video   `protobuf:"bytes,7,opt,name=video,proto3" json:"video,omitempty"`
	Overview  []*v1.Image `protobuf:"bytes,8,rep,name=overview,proto3" json:"overview,omitempty"`
	Specs     string      `protobuf:"bytes,9,opt,name=specs,proto3" json:"specs,omitempty"`
	Tags      []*v1.Tag   `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Inventory int32       `protobuf:"varint,11,opt,name=Inventory,proto3" json:"Inventory,omitempty"`
	PublishAt int64       `protobuf:"varint,12,opt,name=publish_at,json=publishAt,proto3" json:"publish_at,omitempty"`
}

func (x *CreateProduct) Reset() {
	*x = CreateProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProduct) ProtoMessage() {}

func (x *CreateProduct) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProduct.ProtoReflect.Descriptor instead.
func (*CreateProduct) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{2}
}

func (x *CreateProduct) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CreateProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProduct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProduct) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateProduct) GetThumb() *v1.Image {
	if x != nil {
		return x.Thumb
	}
	return nil
}

func (x *CreateProduct) GetImages() []*v1.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateProduct) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *CreateProduct) GetOverview() []*v1.Image {
	if x != nil {
		return x.Overview
	}
	return nil
}

func (x *CreateProduct) GetSpecs() string {
	if x != nil {
		return x.Specs
	}
	return ""
}

func (x *CreateProduct) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateProduct) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *CreateProduct) GetPublishAt() int64 {
	if x != nil {
		return x.PublishAt
	}
	return 0
}

type ProductCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShopId    int64     `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name      string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title     string    `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Price     int64     `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Thumb     *v1.Image `protobuf:"bytes,6,opt,name=thumb,proto3" json:"thumb,omitempty"`
	Video     *v1.Video `protobuf:"bytes,7,opt,name=video,proto3" json:"video,omitempty"`
	Tags      []*v1.Tag `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	PublishAt int64     `protobuf:"varint,9,opt,name=publish_at,json=publishAt,proto3" json:"publish_at,omitempty"`
	State     int32     `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`
	Version   int32     `protobuf:"varint,11,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ProductCard) Reset() {
	*x = ProductCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCard) ProtoMessage() {}

func (x *ProductCard) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCard.ProtoReflect.Descriptor instead.
func (*ProductCard) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{3}
}

func (x *ProductCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductCard) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ProductCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProductCard) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductCard) GetThumb() *v1.Image {
	if x != nil {
		return x.Thumb
	}
	return nil
}

func (x *ProductCard) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *ProductCard) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProductCard) GetPublishAt() int64 {
	if x != nil {
		return x.PublishAt
	}
	return 0
}

func (x *ProductCard) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ProductCard) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type Sku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProductId int64    `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Product   *Product `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *Sku) Reset() {
	*x = Sku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sku) ProtoMessage() {}

func (x *Sku) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sku.ProtoReflect.Descriptor instead.
func (*Sku) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{4}
}

func (x *Sku) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Sku) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sku) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Sku) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type SkuOnlyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProductId int64  `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *SkuOnlyId) Reset() {
	*x = SkuOnlyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuOnlyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuOnlyId) ProtoMessage() {}

func (x *SkuOnlyId) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuOnlyId.ProtoReflect.Descriptor instead.
func (*SkuOnlyId) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{5}
}

func (x *SkuOnlyId) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SkuOnlyId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SkuOnlyId) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShopId    int64     `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name      string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title     string    `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Cover     *v1.Image `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Video     *v1.Video `protobuf:"bytes,6,opt,name=video,proto3" json:"video,omitempty"`
	Tags      []*v1.Tag `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	State     int32     `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt int64     `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64     `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PublishAt int64     `protobuf:"varint,11,opt,name=publish_at,json=publishAt,proto3" json:"publish_at,omitempty"`
	Version   int32     `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
	Skus      []*Sku    `protobuf:"bytes,13,rep,name=skus,proto3" json:"skus,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{6}
}

func (x *Collection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Collection) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Collection) GetCover() *v1.Image {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *Collection) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Collection) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Collection) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Collection) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Collection) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Collection) GetPublishAt() int64 {
	if x != nil {
		return x.PublishAt
	}
	return 0
}

func (x *Collection) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Collection) GetSkus() []*Sku {
	if x != nil {
		return x.Skus
	}
	return nil
}

type CreateCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId     int64        `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Title      string       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Cover      *v1.Image    `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Video      *v1.Video    `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
	Tags       []*v1.Tag    `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	PublishAt  int64        `protobuf:"varint,7,opt,name=publish_at,json=publishAt,proto3" json:"publish_at,omitempty"`
	SkusOnlyId []*SkuOnlyId `protobuf:"bytes,8,rep,name=skus_only_id,json=skusOnlyId,proto3" json:"skus_only_id,omitempty"`
}

func (x *CreateCollection) Reset() {
	*x = CreateCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollection) ProtoMessage() {}

func (x *CreateCollection) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollection.ProtoReflect.Descriptor instead.
func (*CreateCollection) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCollection) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CreateCollection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCollection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCollection) GetCover() *v1.Image {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *CreateCollection) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *CreateCollection) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateCollection) GetPublishAt() int64 {
	if x != nil {
		return x.PublishAt
	}
	return 0
}

func (x *CreateCollection) GetSkusOnlyId() []*SkuOnlyId {
	if x != nil {
		return x.SkusOnlyId
	}
	return nil
}

type CollectionCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShopId      int64        `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name        string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title       string       `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Cover       *v1.Image    `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Video       *v1.Video    `protobuf:"bytes,6,opt,name=video,proto3" json:"video,omitempty"`
	Tags        []*v1.Tag    `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	State       int32        `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	Version     int32        `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	ProductId   int64        `protobuf:"varint,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductCard *ProductCard `protobuf:"bytes,11,opt,name=product_card,json=productCard,proto3" json:"product_card,omitempty"`
}

func (x *CollectionCard) Reset() {
	*x = CollectionCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionCard) ProtoMessage() {}

func (x *CollectionCard) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionCard.ProtoReflect.Descriptor instead.
func (*CollectionCard) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{8}
}

func (x *CollectionCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CollectionCard) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *CollectionCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CollectionCard) GetCover() *v1.Image {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *CollectionCard) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *CollectionCard) GetTags() []*v1.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CollectionCard) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CollectionCard) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CollectionCard) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CollectionCard) GetProductCard() *ProductCard {
	if x != nil {
		return x.ProductCard
	}
	return nil
}

type CartItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid          int64        `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	CollectionId int64        `protobuf:"varint,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Quantity     int32        `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt    int64        `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64        `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ProductId    int64        `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductCard  *ProductCard `protobuf:"bytes,8,opt,name=product_card,json=productCard,proto3" json:"product_card,omitempty"`
}

func (x *CartItem) Reset() {
	*x = CartItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItem) ProtoMessage() {}

func (x *CartItem) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItem.ProtoReflect.Descriptor instead.
func (*CartItem) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{9}
}

func (x *CartItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CartItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CartItem) GetCollectionId() int64 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *CartItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CartItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CartItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CartItem) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CartItem) GetProductCard() *ProductCard {
	if x != nil {
		return x.ProductCard
	}
	return nil
}

type OrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId    int64        `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	ProductId       int64        `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity        int32        `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ShotProductId   int64        `protobuf:"varint,4,opt,name=shot_product_id,json=shotProductId,proto3" json:"shot_product_id,omitempty"`
	ShotProductCard *ProductCard `protobuf:"bytes,5,opt,name=shot_product_card,json=shotProductCard,proto3" json:"shot_product_card,omitempty"`
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{10}
}

func (x *OrderItem) GetCollectionId() int64 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *OrderItem) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItem) GetShotProductId() int64 {
	if x != nil {
		return x.ShotProductId
	}
	return 0
}

func (x *OrderItem) GetShotProductCard() *ProductCard {
	if x != nil {
		return x.ShotProductCard
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                   int64        `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	OrderItems            []*OrderItem `protobuf:"bytes,3,rep,name=order_items,json=orderItems,proto3" json:"order_items,omitempty"`
	State                 int32        `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt             int64        `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             int64        `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PayAt                 int64        `protobuf:"varint,7,opt,name=pay_at,json=payAt,proto3" json:"pay_at,omitempty"`
	DeliverAt             int64        `protobuf:"varint,8,opt,name=deliver_at,json=deliverAt,proto3" json:"deliver_at,omitempty"`
	ReceiveAt             int64        `protobuf:"varint,9,opt,name=receive_at,json=receiveAt,proto3" json:"receive_at,omitempty"`
	CancelAt              int64        `protobuf:"varint,10,opt,name=cancel_at,json=cancelAt,proto3" json:"cancel_at,omitempty"`
	RefundAt              int64        `protobuf:"varint,11,opt,name=refund_at,json=refundAt,proto3" json:"refund_at,omitempty"`
	RefundAmount          int64        `protobuf:"varint,12,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	TotalAmount           int64        `protobuf:"varint,13,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	TotalQuantity         int64        `protobuf:"varint,14,opt,name=total_quantity,json=totalQuantity,proto3" json:"total_quantity,omitempty"`
	TotalDiscount         int64        `protobuf:"varint,15,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`
	TotalPay              int64        `protobuf:"varint,16,opt,name=total_pay,json=totalPay,proto3" json:"total_pay,omitempty"`
	TotalRefund           int64        `protobuf:"varint,17,opt,name=total_refund,json=totalRefund,proto3" json:"total_refund,omitempty"`
	TotalCoupon           int64        `protobuf:"varint,18,opt,name=total_coupon,json=totalCoupon,proto3" json:"total_coupon,omitempty"`
	TotalPoint            int64        `protobuf:"varint,19,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	TotalFreight          int64        `protobuf:"varint,20,opt,name=total_freight,json=totalFreight,proto3" json:"total_freight,omitempty"`
	TotalTax              int64        `protobuf:"varint,21,opt,name=total_tax,json=totalTax,proto3" json:"total_tax,omitempty"`
	TotalService          int64        `protobuf:"varint,22,opt,name=total_service,json=totalService,proto3" json:"total_service,omitempty"`
	TotalProfit           int64        `protobuf:"varint,23,opt,name=total_profit,json=totalProfit,proto3" json:"total_profit,omitempty"`
	TotalCost             int64        `protobuf:"varint,24,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	TotalProfitRate       int64        `protobuf:"varint,25,opt,name=total_profit_rate,json=totalProfitRate,proto3" json:"total_profit_rate,omitempty"`
	TotalCostRate         int64        `protobuf:"varint,26,opt,name=total_cost_rate,json=totalCostRate,proto3" json:"total_cost_rate,omitempty"`
	TotalProfitMargin     int64        `protobuf:"varint,27,opt,name=total_profit_margin,json=totalProfitMargin,proto3" json:"total_profit_margin,omitempty"`
	TotalCostMargin       int64        `protobuf:"varint,28,opt,name=total_cost_margin,json=totalCostMargin,proto3" json:"total_cost_margin,omitempty"`
	TotalProfitMarginRate int64        `protobuf:"varint,29,opt,name=total_profit_margin_rate,json=totalProfitMarginRate,proto3" json:"total_profit_margin_rate,omitempty"`
	TotalCostMarginRate   int64        `protobuf:"varint,30,opt,name=total_cost_margin_rate,json=totalCostMarginRate,proto3" json:"total_cost_margin_rate,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{11}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Order) GetOrderItems() []*OrderItem {
	if x != nil {
		return x.OrderItems
	}
	return nil
}

func (x *Order) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Order) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Order) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Order) GetPayAt() int64 {
	if x != nil {
		return x.PayAt
	}
	return 0
}

func (x *Order) GetDeliverAt() int64 {
	if x != nil {
		return x.DeliverAt
	}
	return 0
}

func (x *Order) GetReceiveAt() int64 {
	if x != nil {
		return x.ReceiveAt
	}
	return 0
}

func (x *Order) GetCancelAt() int64 {
	if x != nil {
		return x.CancelAt
	}
	return 0
}

func (x *Order) GetRefundAt() int64 {
	if x != nil {
		return x.RefundAt
	}
	return 0
}

func (x *Order) GetRefundAmount() int64 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *Order) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *Order) GetTotalQuantity() int64 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *Order) GetTotalDiscount() int64 {
	if x != nil {
		return x.TotalDiscount
	}
	return 0
}

func (x *Order) GetTotalPay() int64 {
	if x != nil {
		return x.TotalPay
	}
	return 0
}

func (x *Order) GetTotalRefund() int64 {
	if x != nil {
		return x.TotalRefund
	}
	return 0
}

func (x *Order) GetTotalCoupon() int64 {
	if x != nil {
		return x.TotalCoupon
	}
	return 0
}

func (x *Order) GetTotalPoint() int64 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *Order) GetTotalFreight() int64 {
	if x != nil {
		return x.TotalFreight
	}
	return 0
}

func (x *Order) GetTotalTax() int64 {
	if x != nil {
		return x.TotalTax
	}
	return 0
}

func (x *Order) GetTotalService() int64 {
	if x != nil {
		return x.TotalService
	}
	return 0
}

func (x *Order) GetTotalProfit() int64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

func (x *Order) GetTotalCost() int64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *Order) GetTotalProfitRate() int64 {
	if x != nil {
		return x.TotalProfitRate
	}
	return 0
}

func (x *Order) GetTotalCostRate() int64 {
	if x != nil {
		return x.TotalCostRate
	}
	return 0
}

func (x *Order) GetTotalProfitMargin() int64 {
	if x != nil {
		return x.TotalProfitMargin
	}
	return 0
}

func (x *Order) GetTotalCostMargin() int64 {
	if x != nil {
		return x.TotalCostMargin
	}
	return 0
}

func (x *Order) GetTotalProfitMarginRate() int64 {
	if x != nil {
		return x.TotalProfitMarginRate
	}
	return 0
}

func (x *Order) GetTotalCostMarginRate() int64 {
	if x != nil {
		return x.TotalCostMarginRate
	}
	return 0
}

type CreateShopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64     `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sign string    `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Logo *v1.Image `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *CreateShopReq) Reset() {
	*x = CreateShopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShopReq) ProtoMessage() {}

func (x *CreateShopReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShopReq.ProtoReflect.Descriptor instead.
func (*CreateShopReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{12}
}

func (x *CreateShopReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateShopReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateShopReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *CreateShopReq) GetLogo() *v1.Image {
	if x != nil {
		return x.Logo
	}
	return nil
}

type CreateShopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateShopResponse) Reset() {
	*x = CreateShopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShopResponse) ProtoMessage() {}

func (x *CreateShopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShopResponse.ProtoReflect.Descriptor instead.
func (*CreateShopResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{13}
}

func (x *CreateShopResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetShopByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetShopByIdReq) Reset() {
	*x = GetShopByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopByIdReq) ProtoMessage() {}

func (x *GetShopByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopByIdReq.ProtoReflect.Descriptor instead.
func (*GetShopByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{14}
}

func (x *GetShopByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetShopByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop *Shop `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *GetShopByIdResponse) Reset() {
	*x = GetShopByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShopByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShopByIdResponse) ProtoMessage() {}

func (x *GetShopByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShopByIdResponse.ProtoReflect.Descriptor instead.
func (*GetShopByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{15}
}

func (x *GetShopByIdResponse) GetShop() *Shop {
	if x != nil {
		return x.Shop
	}
	return nil
}

type CreateProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateProduct *CreateProduct `protobuf:"bytes,1,opt,name=create_product,json=createProduct,proto3" json:"create_product,omitempty"`
}

func (x *CreateProductReq) Reset() {
	*x = CreateProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductReq) ProtoMessage() {}

func (x *CreateProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductReq.ProtoReflect.Descriptor instead.
func (*CreateProductReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{16}
}

func (x *CreateProductReq) GetCreateProduct() *CreateProduct {
	if x != nil {
		return x.CreateProduct
	}
	return nil
}

type CreateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateProductResponse) Reset() {
	*x = CreateProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductResponse) ProtoMessage() {}

func (x *CreateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductResponse.ProtoReflect.Descriptor instead.
func (*CreateProductResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{17}
}

func (x *CreateProductResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProductByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProductByIdReq) Reset() {
	*x = GetProductByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductByIdReq) ProtoMessage() {}

func (x *GetProductByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductByIdReq.ProtoReflect.Descriptor instead.
func (*GetProductByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{18}
}

func (x *GetProductByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProductByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *GetProductByIdResponse) Reset() {
	*x = GetProductByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductByIdResponse) ProtoMessage() {}

func (x *GetProductByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductByIdResponse.ProtoReflect.Descriptor instead.
func (*GetProductByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{19}
}

func (x *GetProductByIdResponse) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type MapProductByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *MapProductByIdsReq) Reset() {
	*x = MapProductByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapProductByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapProductByIdsReq) ProtoMessage() {}

func (x *MapProductByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapProductByIdsReq.ProtoReflect.Descriptor instead.
func (*MapProductByIdsReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{20}
}

func (x *MapProductByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MapProductByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products map[int64]*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total    int32              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MapProductByIdsResponse) Reset() {
	*x = MapProductByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapProductByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapProductByIdsResponse) ProtoMessage() {}

func (x *MapProductByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapProductByIdsResponse.ProtoReflect.Descriptor instead.
func (*MapProductByIdsResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{21}
}

func (x *MapProductByIdsResponse) GetProducts() map[int64]*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *MapProductByIdsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCollectionByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectionByIdReq) Reset() {
	*x = GetCollectionByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionByIdReq) ProtoMessage() {}

func (x *GetCollectionByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionByIdReq.ProtoReflect.Descriptor instead.
func (*GetCollectionByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{22}
}

func (x *GetCollectionByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectionByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *GetCollectionByIdResponse) Reset() {
	*x = GetCollectionByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionByIdResponse) ProtoMessage() {}

func (x *GetCollectionByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCollectionByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{23}
}

func (x *GetCollectionByIdResponse) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

type GetCollectionCardByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectionCardByIdReq) Reset() {
	*x = GetCollectionCardByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionCardByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionCardByIdReq) ProtoMessage() {}

func (x *GetCollectionCardByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionCardByIdReq.ProtoReflect.Descriptor instead.
func (*GetCollectionCardByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{24}
}

func (x *GetCollectionCardByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectionCardByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionCard *CollectionCard `protobuf:"bytes,1,opt,name=collection_card,json=collectionCard,proto3" json:"collection_card,omitempty"`
}

func (x *GetCollectionCardByIdResponse) Reset() {
	*x = GetCollectionCardByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionCardByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionCardByIdResponse) ProtoMessage() {}

func (x *GetCollectionCardByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionCardByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCollectionCardByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{25}
}

func (x *GetCollectionCardByIdResponse) GetCollectionCard() *CollectionCard {
	if x != nil {
		return x.CollectionCard
	}
	return nil
}

type CreateCollectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateCollection *CreateCollection `protobuf:"bytes,1,opt,name=create_collection,json=createCollection,proto3" json:"create_collection,omitempty"`
}

func (x *CreateCollectionReq) Reset() {
	*x = CreateCollectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionReq) ProtoMessage() {}

func (x *CreateCollectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionReq.ProtoReflect.Descriptor instead.
func (*CreateCollectionReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{26}
}

func (x *CreateCollectionReq) GetCreateCollection() *CreateCollection {
	if x != nil {
		return x.CreateCollection
	}
	return nil
}

type CreateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{27}
}

func (x *CreateCollectionResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MapCollectionCardByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *MapCollectionCardByIdsReq) Reset() {
	*x = MapCollectionCardByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCollectionCardByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCollectionCardByIdsReq) ProtoMessage() {}

func (x *MapCollectionCardByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCollectionCardByIdsReq.ProtoReflect.Descriptor instead.
func (*MapCollectionCardByIdsReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{28}
}

func (x *MapCollectionCardByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MapCollectionCardByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionCards map[int64]*CollectionCard `protobuf:"bytes,1,rep,name=collection_cards,json=collectionCards,proto3" json:"collection_cards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total           int32                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MapCollectionCardByIdsResponse) Reset() {
	*x = MapCollectionCardByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCollectionCardByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCollectionCardByIdsResponse) ProtoMessage() {}

func (x *MapCollectionCardByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCollectionCardByIdsResponse.ProtoReflect.Descriptor instead.
func (*MapCollectionCardByIdsResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{29}
}

func (x *MapCollectionCardByIdsResponse) GetCollectionCards() map[int64]*CollectionCard {
	if x != nil {
		return x.CollectionCards
	}
	return nil
}

func (x *MapCollectionCardByIdsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MapCollectionCardByShopIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State  int32      `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Cursor *v1.Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Sort   *v1.Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *MapCollectionCardByShopIdReq) Reset() {
	*x = MapCollectionCardByShopIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCollectionCardByShopIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCollectionCardByShopIdReq) ProtoMessage() {}

func (x *MapCollectionCardByShopIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCollectionCardByShopIdReq.ProtoReflect.Descriptor instead.
func (*MapCollectionCardByShopIdReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{30}
}

func (x *MapCollectionCardByShopIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MapCollectionCardByShopIdReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *MapCollectionCardByShopIdReq) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *MapCollectionCardByShopIdReq) GetSort() *v1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type MapCollectionCardByShopIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionCards map[int64]*CollectionCard `protobuf:"bytes,1,rep,name=collection_cards,json=collectionCards,proto3" json:"collection_cards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total           int32                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Cursor          *v1.Cursor                `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *MapCollectionCardByShopIdResponse) Reset() {
	*x = MapCollectionCardByShopIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCollectionCardByShopIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCollectionCardByShopIdResponse) ProtoMessage() {}

func (x *MapCollectionCardByShopIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCollectionCardByShopIdResponse.ProtoReflect.Descriptor instead.
func (*MapCollectionCardByShopIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{31}
}

func (x *MapCollectionCardByShopIdResponse) GetCollectionCards() map[int64]*CollectionCard {
	if x != nil {
		return x.CollectionCards
	}
	return nil
}

func (x *MapCollectionCardByShopIdResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MapCollectionCardByShopIdResponse) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type UpdateCollectionStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateCollectionStateReq) Reset() {
	*x = UpdateCollectionStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionStateReq) ProtoMessage() {}

func (x *UpdateCollectionStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionStateReq.ProtoReflect.Descriptor instead.
func (*UpdateCollectionStateReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateCollectionStateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCollectionStateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type UpdateCollectionStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCollectionStateResponse) Reset() {
	*x = UpdateCollectionStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionStateResponse) ProtoMessage() {}

func (x *UpdateCollectionStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateCollectionStateResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{33}
}

type UpdateCollectionSkuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SkusOnlyId []*SkuOnlyId `protobuf:"bytes,2,rep,name=skus_only_id,json=skusOnlyId,proto3" json:"skus_only_id,omitempty"`
}

func (x *UpdateCollectionSkuReq) Reset() {
	*x = UpdateCollectionSkuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionSkuReq) ProtoMessage() {}

func (x *UpdateCollectionSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionSkuReq.ProtoReflect.Descriptor instead.
func (*UpdateCollectionSkuReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateCollectionSkuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCollectionSkuReq) GetSkusOnlyId() []*SkuOnlyId {
	if x != nil {
		return x.SkusOnlyId
	}
	return nil
}

type UpdateCollectionSkuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCollectionSkuResponse) Reset() {
	*x = UpdateCollectionSkuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionSkuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionSkuResponse) ProtoMessage() {}

func (x *UpdateCollectionSkuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionSkuResponse.ProtoReflect.Descriptor instead.
func (*UpdateCollectionSkuResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{35}
}

type CreateCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CollectionId int64 `protobuf:"varint,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	ProductId    int64 `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity     int32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *CreateCartItemReq) Reset() {
	*x = CreateCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCartItemReq) ProtoMessage() {}

func (x *CreateCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCartItemReq.ProtoReflect.Descriptor instead.
func (*CreateCartItemReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{36}
}

func (x *CreateCartItemReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateCartItemReq) GetCollectionId() int64 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *CreateCartItemReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateCartItemReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type CreateCartItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCartItemResponse) Reset() {
	*x = CreateCartItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCartItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCartItemResponse) ProtoMessage() {}

func (x *CreateCartItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCartItemResponse.ProtoReflect.Descriptor instead.
func (*CreateCartItemResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{37}
}

func (x *CreateCartItemResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MapCartItemByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *MapCartItemByUidReq) Reset() {
	*x = MapCartItemByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCartItemByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCartItemByUidReq) ProtoMessage() {}

func (x *MapCartItemByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCartItemByUidReq.ProtoReflect.Descriptor instead.
func (*MapCartItemByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{38}
}

func (x *MapCartItemByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type MapCartItemByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartItems map[int64]*CartItem `protobuf:"bytes,1,rep,name=cart_items,json=cartItems,proto3" json:"cart_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total     int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MapCartItemByUidResponse) Reset() {
	*x = MapCartItemByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCartItemByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCartItemByUidResponse) ProtoMessage() {}

func (x *MapCartItemByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCartItemByUidResponse.ProtoReflect.Descriptor instead.
func (*MapCartItemByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{39}
}

func (x *MapCartItemByUidResponse) GetCartItems() map[int64]*CartItem {
	if x != nil {
		return x.CartItems
	}
	return nil
}

func (x *MapCartItemByUidResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateCartItemQuantityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity int32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *UpdateCartItemQuantityReq) Reset() {
	*x = UpdateCartItemQuantityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemQuantityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemQuantityReq) ProtoMessage() {}

func (x *UpdateCartItemQuantityReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemQuantityReq.ProtoReflect.Descriptor instead.
func (*UpdateCartItemQuantityReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateCartItemQuantityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCartItemQuantityReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type UpdateCartItemQuantityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCartItemQuantityResponse) Reset() {
	*x = UpdateCartItemQuantityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemQuantityResponse) ProtoMessage() {}

func (x *UpdateCartItemQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemQuantityResponse.ProtoReflect.Descriptor instead.
func (*UpdateCartItemQuantityResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateCartItemQuantityResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DeleteCartItemReq) Reset() {
	*x = DeleteCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCartItemReq) ProtoMessage() {}

func (x *DeleteCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCartItemReq.ProtoReflect.Descriptor instead.
func (*DeleteCartItemReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteCartItemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCartItemReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type DeleteCartItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCartItemResponse) Reset() {
	*x = DeleteCartItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCartItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCartItemResponse) ProtoMessage() {}

func (x *DeleteCartItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCartItemResponse.ProtoReflect.Descriptor instead.
func (*DeleteCartItemResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{43}
}

type CreateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64        `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OrderItems []*OrderItem `protobuf:"bytes,2,rep,name=order_items,json=orderItems,proto3" json:"order_items,omitempty"`
}

func (x *CreateOrderReq) Reset() {
	*x = CreateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderReq) ProtoMessage() {}

func (x *CreateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderReq.ProtoReflect.Descriptor instead.
func (*CreateOrderReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{44}
}

func (x *CreateOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateOrderReq) GetOrderItems() []*OrderItem {
	if x != nil {
		return x.OrderItems
	}
	return nil
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{45}
}

func (x *CreateOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *CreateOrderResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetOrderByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOrderByIdReq) Reset() {
	*x = GetOrderByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIdReq) ProtoMessage() {}

func (x *GetOrderByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIdReq.ProtoReflect.Descriptor instead.
func (*GetOrderByIdReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{46}
}

func (x *GetOrderByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOrderByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetOrderByIdResponse) Reset() {
	*x = GetOrderByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIdResponse) ProtoMessage() {}

func (x *GetOrderByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIdResponse.ProtoReflect.Descriptor instead.
func (*GetOrderByIdResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{47}
}

func (x *GetOrderByIdResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type MapOrderByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *MapOrderByIdsReq) Reset() {
	*x = MapOrderByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapOrderByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapOrderByIdsReq) ProtoMessage() {}

func (x *MapOrderByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapOrderByIdsReq.ProtoReflect.Descriptor instead.
func (*MapOrderByIdsReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{48}
}

func (x *MapOrderByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MapOrderByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders map[int64]*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total  int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MapOrderByIdsResponse) Reset() {
	*x = MapOrderByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapOrderByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapOrderByIdsResponse) ProtoMessage() {}

func (x *MapOrderByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapOrderByIdsResponse.ProtoReflect.Descriptor instead.
func (*MapOrderByIdsResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{49}
}

func (x *MapOrderByIdsResponse) GetOrders() map[int64]*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *MapOrderByIdsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MapOrderByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64      `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	State     int32      `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	StartTime int64      `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64      `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Cursor    *v1.Cursor `protobuf:"bytes,5,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Sort      *v1.Sort   `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *MapOrderByUidReq) Reset() {
	*x = MapOrderByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapOrderByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapOrderByUidReq) ProtoMessage() {}

func (x *MapOrderByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapOrderByUidReq.ProtoReflect.Descriptor instead.
func (*MapOrderByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{50}
}

func (x *MapOrderByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MapOrderByUidReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *MapOrderByUidReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MapOrderByUidReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MapOrderByUidReq) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *MapOrderByUidReq) GetSort() *v1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type MapOrderByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders map[int64]*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total  int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Cursor *v1.Cursor       `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *MapOrderByUidResponse) Reset() {
	*x = MapOrderByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapOrderByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapOrderByUidResponse) ProtoMessage() {}

func (x *MapOrderByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapOrderByUidResponse.ProtoReflect.Descriptor instead.
func (*MapOrderByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{51}
}

func (x *MapOrderByUidResponse) GetOrders() map[int64]*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *MapOrderByUidResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MapOrderByUidResponse) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type UpdateOrderStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action int32 `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	State  int64 `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateOrderStateReq) Reset() {
	*x = UpdateOrderStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStateReq) ProtoMessage() {}

func (x *UpdateOrderStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStateReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderStateReq) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateOrderStateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderStateReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *UpdateOrderStateReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

type UpdateOrderStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateOrderStateResponse) Reset() {
	*x = UpdateOrderStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_mall_v1_mall_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStateResponse) ProtoMessage() {}

func (x *UpdateOrderStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_mall_v1_mall_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderStateResponse) Descriptor() ([]byte, []int) {
	return file_domain_mall_v1_mall_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateOrderStateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_domain_mall_v1_mall_proto protoreflect.FileDescriptor

var file_domain_mall_v1_mall_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x6c, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb7, 0x01, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62,
	0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8e, 0x04, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62,
	0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x03, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72,
	0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64,
	0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x63, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x41, 0x74, 0x22, 0xc2, 0x02, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65,
	0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b,
	0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x03, 0x53, 0x6b, 0x75,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x54, 0x0a, 0x09,
	0x53, 0x6b, 0x75, 0x4f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f,
	0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6b,
	0x75, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62,
	0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x73,
	0x6b, 0x75, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6b, 0x75, 0x4f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x52, 0x0a, 0x73, 0x6b,
	0x75, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f,
	0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x08, 0x43,
	0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a,
	0x11, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0xa9, 0x08, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a,
	0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x22, 0x72, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x27, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65,
	0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x22,
	0x58, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x22, 0x26, 0x0a, 0x12, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xd8, 0x01, 0x0a,
	0x17, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x1a, 0x54, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x22, 0x64,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2d, 0x0a, 0x19, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x8a, 0x02, 0x0a, 0x1e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6e, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x62, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a,
	0x1c, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x21, 0x4d, 0x61,
	0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x71, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x53, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f,
	0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x1a, 0x62, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1f, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x73, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6b, 0x75, 0x4f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x52, 0x0a, 0x73, 0x6b, 0x75, 0x73, 0x4f, 0x6e,
	0x6c, 0x79, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x28, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xe0,
	0x01, 0x0a, 0x18, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x56, 0x0a, 0x0e, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x47, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x58, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x24, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x1a, 0x50, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64, 0x62,
	0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22,
	0xf8, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x64,
	0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x1a, 0x50, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x2a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x2a, 0xf2, 0x01, 0x0a, 0x0a,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x43,
	0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x08,
	0x2a, 0xbc, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49,
	0x56, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x17, 0x0a,
	0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x06, 0x32,
	0xcf, 0x10, 0x0a, 0x07, 0x4d, 0x61, 0x6c, 0x6c, 0x52, 0x70, 0x63, 0x12, 0x51, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x63, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x75, 0x0a, 0x16, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x19, 0x4d, 0x61, 0x70,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6b, 0x75, 0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x4d, 0x61,
	0x70, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x23,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x70, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x55, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61,
	0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5a, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x12, 0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x55, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x55,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x4a, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x4d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x6c, 0x6c, 0x2f, 0x76, 0x31,
	0x3b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x6d, 0x61, 0x6c, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_mall_v1_mall_proto_rawDescOnce sync.Once
	file_domain_mall_v1_mall_proto_rawDescData = file_domain_mall_v1_mall_proto_rawDesc
)

func file_domain_mall_v1_mall_proto_rawDescGZIP() []byte {
	file_domain_mall_v1_mall_proto_rawDescOnce.Do(func() {
		file_domain_mall_v1_mall_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_mall_v1_mall_proto_rawDescData)
	})
	return file_domain_mall_v1_mall_proto_rawDescData
}

var file_domain_mall_v1_mall_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_domain_mall_v1_mall_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_domain_mall_v1_mall_proto_goTypes = []interface{}{
	(OrderState)(0),                           // 0: domain.mall.v1.OrderState
	(OrderAction)(0),                          // 1: domain.mall.v1.OrderAction
	(*Shop)(nil),                              // 2: domain.mall.v1.Shop
	(*Product)(nil),                           // 3: domain.mall.v1.Product
	(*CreateProduct)(nil),                     // 4: domain.mall.v1.CreateProduct
	(*ProductCard)(nil),                       // 5: domain.mall.v1.ProductCard
	(*Sku)(nil),                               // 6: domain.mall.v1.Sku
	(*SkuOnlyId)(nil),                         // 7: domain.mall.v1.SkuOnlyId
	(*Collection)(nil),                        // 8: domain.mall.v1.Collection
	(*CreateCollection)(nil),                  // 9: domain.mall.v1.CreateCollection
	(*CollectionCard)(nil),                    // 10: domain.mall.v1.CollectionCard
	(*CartItem)(nil),                          // 11: domain.mall.v1.CartItem
	(*OrderItem)(nil),                         // 12: domain.mall.v1.OrderItem
	(*Order)(nil),                             // 13: domain.mall.v1.Order
	(*CreateShopReq)(nil),                     // 14: domain.mall.v1.CreateShopReq
	(*CreateShopResponse)(nil),                // 15: domain.mall.v1.CreateShopResponse
	(*GetShopByIdReq)(nil),                    // 16: domain.mall.v1.GetShopByIdReq
	(*GetShopByIdResponse)(nil),               // 17: domain.mall.v1.GetShopByIdResponse
	(*CreateProductReq)(nil),                  // 18: domain.mall.v1.CreateProductReq
	(*CreateProductResponse)(nil),             // 19: domain.mall.v1.CreateProductResponse
	(*GetProductByIdReq)(nil),                 // 20: domain.mall.v1.GetProductByIdReq
	(*GetProductByIdResponse)(nil),            // 21: domain.mall.v1.GetProductByIdResponse
	(*MapProductByIdsReq)(nil),                // 22: domain.mall.v1.MapProductByIdsReq
	(*MapProductByIdsResponse)(nil),           // 23: domain.mall.v1.MapProductByIdsResponse
	(*GetCollectionByIdReq)(nil),              // 24: domain.mall.v1.GetCollectionByIdReq
	(*GetCollectionByIdResponse)(nil),         // 25: domain.mall.v1.GetCollectionByIdResponse
	(*GetCollectionCardByIdReq)(nil),          // 26: domain.mall.v1.GetCollectionCardByIdReq
	(*GetCollectionCardByIdResponse)(nil),     // 27: domain.mall.v1.GetCollectionCardByIdResponse
	(*CreateCollectionReq)(nil),               // 28: domain.mall.v1.CreateCollectionReq
	(*CreateCollectionResponse)(nil),          // 29: domain.mall.v1.CreateCollectionResponse
	(*MapCollectionCardByIdsReq)(nil),         // 30: domain.mall.v1.MapCollectionCardByIdsReq
	(*MapCollectionCardByIdsResponse)(nil),    // 31: domain.mall.v1.MapCollectionCardByIdsResponse
	(*MapCollectionCardByShopIdReq)(nil),      // 32: domain.mall.v1.MapCollectionCardByShopIdReq
	(*MapCollectionCardByShopIdResponse)(nil), // 33: domain.mall.v1.MapCollectionCardByShopIdResponse
	(*UpdateCollectionStateReq)(nil),          // 34: domain.mall.v1.UpdateCollectionStateReq
	(*UpdateCollectionStateResponse)(nil),     // 35: domain.mall.v1.UpdateCollectionStateResponse
	(*UpdateCollectionSkuReq)(nil),            // 36: domain.mall.v1.UpdateCollectionSkuReq
	(*UpdateCollectionSkuResponse)(nil),       // 37: domain.mall.v1.UpdateCollectionSkuResponse
	(*CreateCartItemReq)(nil),                 // 38: domain.mall.v1.CreateCartItemReq
	(*CreateCartItemResponse)(nil),            // 39: domain.mall.v1.CreateCartItemResponse
	(*MapCartItemByUidReq)(nil),               // 40: domain.mall.v1.MapCartItemByUidReq
	(*MapCartItemByUidResponse)(nil),          // 41: domain.mall.v1.MapCartItemByUidResponse
	(*UpdateCartItemQuantityReq)(nil),         // 42: domain.mall.v1.UpdateCartItemQuantityReq
	(*UpdateCartItemQuantityResponse)(nil),    // 43: domain.mall.v1.UpdateCartItemQuantityResponse
	(*DeleteCartItemReq)(nil),                 // 44: domain.mall.v1.DeleteCartItemReq
	(*DeleteCartItemResponse)(nil),            // 45: domain.mall.v1.DeleteCartItemResponse
	(*CreateOrderReq)(nil),                    // 46: domain.mall.v1.CreateOrderReq
	(*CreateOrderResponse)(nil),               // 47: domain.mall.v1.CreateOrderResponse
	(*GetOrderByIdReq)(nil),                   // 48: domain.mall.v1.GetOrderByIdReq
	(*GetOrderByIdResponse)(nil),              // 49: domain.mall.v1.GetOrderByIdResponse
	(*MapOrderByIdsReq)(nil),                  // 50: domain.mall.v1.MapOrderByIdsReq
	(*MapOrderByIdsResponse)(nil),             // 51: domain.mall.v1.MapOrderByIdsResponse
	(*MapOrderByUidReq)(nil),                  // 52: domain.mall.v1.MapOrderByUidReq
	(*MapOrderByUidResponse)(nil),             // 53: domain.mall.v1.MapOrderByUidResponse
	(*UpdateOrderStateReq)(nil),               // 54: domain.mall.v1.UpdateOrderStateReq
	(*UpdateOrderStateResponse)(nil),          // 55: domain.mall.v1.UpdateOrderStateResponse
	nil,                                       // 56: domain.mall.v1.MapProductByIdsResponse.ProductsEntry
	nil,                                       // 57: domain.mall.v1.MapCollectionCardByIdsResponse.CollectionCardsEntry
	nil,                                       // 58: domain.mall.v1.MapCollectionCardByShopIdResponse.CollectionCardsEntry
	nil,                                       // 59: domain.mall.v1.MapCartItemByUidResponse.CartItemsEntry
	nil,                                       // 60: domain.mall.v1.MapOrderByIdsResponse.OrdersEntry
	nil,                                       // 61: domain.mall.v1.MapOrderByUidResponse.OrdersEntry
	(*v1.Image)(nil),                          // 62: redbookpb.v1.Image
	(*v1.Video)(nil),                          // 63: redbookpb.v1.Video
	(*v1.Tag)(nil),                            // 64: redbookpb.v1.Tag
	(*v1.Cursor)(nil),                         // 65: redbookpb.v1.Cursor
	(*v1.Sort)(nil),                           // 66: redbookpb.v1.Sort
}
var file_domain_mall_v1_mall_proto_depIdxs = []int32{
	62, // 0: domain.mall.v1.Shop.logo:type_name -> redbookpb.v1.Image
	62, // 1: domain.mall.v1.Product.thumb:type_name -> redbookpb.v1.Image
	62, // 2: domain.mall.v1.Product.images:type_name -> redbookpb.v1.Image
	63, // 3: domain.mall.v1.Product.video:type_name -> redbookpb.v1.Video
	62, // 4: domain.mall.v1.Product.overview:type_name -> redbookpb.v1.Image
	64, // 5: domain.mall.v1.Product.tags:type_name -> redbookpb.v1.Tag
	62, // 6: domain.mall.v1.CreateProduct.thumb:type_name -> redbookpb.v1.Image
	62, // 7: domain.mall.v1.CreateProduct.images:type_name -> redbookpb.v1.Image
	63, // 8: domain.mall.v1.CreateProduct.video:type_name -> redbookpb.v1.Video
	62, // 9: domain.mall.v1.CreateProduct.overview:type_name -> redbookpb.v1.Image
	64, // 10: domain.mall.v1.CreateProduct.tags:type_name -> redbookpb.v1.Tag
	62, // 11: domain.mall.v1.ProductCard.thumb:type_name -> redbookpb.v1.Image
	63, // 12: domain.mall.v1.ProductCard.video:type_name -> redbookpb.v1.Video
	64, // 13: domain.mall.v1.ProductCard.tags:type_name -> redbookpb.v1.Tag
	3,  // 14: domain.mall.v1.Sku.product:type_name -> domain.mall.v1.Product
	62, // 15: domain.mall.v1.Collection.cover:type_name -> redbookpb.v1.Image
	63, // 16: domain.mall.v1.Collection.video:type_name -> redbookpb.v1.Video
	64, // 17: domain.mall.v1.Collection.tags:type_name -> redbookpb.v1.Tag
	6,  // 18: domain.mall.v1.Collection.skus:type_name -> domain.mall.v1.Sku
	62, // 19: domain.mall.v1.CreateCollection.cover:type_name -> redbookpb.v1.Image
	63, // 20: domain.mall.v1.CreateCollection.video:type_name -> redbookpb.v1.Video
	64, // 21: domain.mall.v1.CreateCollection.tags:type_name -> redbookpb.v1.Tag
	7,  // 22: domain.mall.v1.CreateCollection.skus_only_id:type_name -> domain.mall.v1.SkuOnlyId
	62, // 23: domain.mall.v1.CollectionCard.cover:type_name -> redbookpb.v1.Image
	63, // 24: domain.mall.v1.CollectionCard.video:type_name -> redbookpb.v1.Video
	64, // 25: domain.mall.v1.CollectionCard.tags:type_name -> redbookpb.v1.Tag
	5,  // 26: domain.mall.v1.CollectionCard.product_card:type_name -> domain.mall.v1.ProductCard
	5,  // 27: domain.mall.v1.CartItem.product_card:type_name -> domain.mall.v1.ProductCard
	5,  // 28: domain.mall.v1.OrderItem.shot_product_card:type_name -> domain.mall.v1.ProductCard
	12, // 29: domain.mall.v1.Order.order_items:type_name -> domain.mall.v1.OrderItem
	62, // 30: domain.mall.v1.CreateShopReq.logo:type_name -> redbookpb.v1.Image
	2,  // 31: domain.mall.v1.GetShopByIdResponse.shop:type_name -> domain.mall.v1.Shop
	4,  // 32: domain.mall.v1.CreateProductReq.create_product:type_name -> domain.mall.v1.CreateProduct
	3,  // 33: domain.mall.v1.GetProductByIdResponse.product:type_name -> domain.mall.v1.Product
	56, // 34: domain.mall.v1.MapProductByIdsResponse.products:type_name -> domain.mall.v1.MapProductByIdsResponse.ProductsEntry
	8,  // 35: domain.mall.v1.GetCollectionByIdResponse.collection:type_name -> domain.mall.v1.Collection
	10, // 36: domain.mall.v1.GetCollectionCardByIdResponse.collection_card:type_name -> domain.mall.v1.CollectionCard
	9,  // 37: domain.mall.v1.CreateCollectionReq.create_collection:type_name -> domain.mall.v1.CreateCollection
	57, // 38: domain.mall.v1.MapCollectionCardByIdsResponse.collection_cards:type_name -> domain.mall.v1.MapCollectionCardByIdsResponse.CollectionCardsEntry
	65, // 39: domain.mall.v1.MapCollectionCardByShopIdReq.cursor:type_name -> redbookpb.v1.Cursor
	66, // 40: domain.mall.v1.MapCollectionCardByShopIdReq.sort:type_name -> redbookpb.v1.Sort
	58, // 41: domain.mall.v1.MapCollectionCardByShopIdResponse.collection_cards:type_name -> domain.mall.v1.MapCollectionCardByShopIdResponse.CollectionCardsEntry
	65, // 42: domain.mall.v1.MapCollectionCardByShopIdResponse.cursor:type_name -> redbookpb.v1.Cursor
	7,  // 43: domain.mall.v1.UpdateCollectionSkuReq.skus_only_id:type_name -> domain.mall.v1.SkuOnlyId
	59, // 44: domain.mall.v1.MapCartItemByUidResponse.cart_items:type_name -> domain.mall.v1.MapCartItemByUidResponse.CartItemsEntry
	12, // 45: domain.mall.v1.CreateOrderReq.order_items:type_name -> domain.mall.v1.OrderItem
	13, // 46: domain.mall.v1.CreateOrderResponse.order:type_name -> domain.mall.v1.Order
	13, // 47: domain.mall.v1.GetOrderByIdResponse.order:type_name -> domain.mall.v1.Order
	60, // 48: domain.mall.v1.MapOrderByIdsResponse.orders:type_name -> domain.mall.v1.MapOrderByIdsResponse.OrdersEntry
	65, // 49: domain.mall.v1.MapOrderByUidReq.cursor:type_name -> redbookpb.v1.Cursor
	66, // 50: domain.mall.v1.MapOrderByUidReq.sort:type_name -> redbookpb.v1.Sort
	61, // 51: domain.mall.v1.MapOrderByUidResponse.orders:type_name -> domain.mall.v1.MapOrderByUidResponse.OrdersEntry
	65, // 52: domain.mall.v1.MapOrderByUidResponse.cursor:type_name -> redbookpb.v1.Cursor
	3,  // 53: domain.mall.v1.MapProductByIdsResponse.ProductsEntry.value:type_name -> domain.mall.v1.Product
	10, // 54: domain.mall.v1.MapCollectionCardByIdsResponse.CollectionCardsEntry.value:type_name -> domain.mall.v1.CollectionCard
	10, // 55: domain.mall.v1.MapCollectionCardByShopIdResponse.CollectionCardsEntry.value:type_name -> domain.mall.v1.CollectionCard
	11, // 56: domain.mall.v1.MapCartItemByUidResponse.CartItemsEntry.value:type_name -> domain.mall.v1.CartItem
	13, // 57: domain.mall.v1.MapOrderByIdsResponse.OrdersEntry.value:type_name -> domain.mall.v1.Order
	13, // 58: domain.mall.v1.MapOrderByUidResponse.OrdersEntry.value:type_name -> domain.mall.v1.Order
	14, // 59: domain.mall.v1.MallRpc.CreateShop:input_type -> domain.mall.v1.CreateShopReq
	16, // 60: domain.mall.v1.MallRpc.GetShopById:input_type -> domain.mall.v1.GetShopByIdReq
	18, // 61: domain.mall.v1.MallRpc.CreateProduct:input_type -> domain.mall.v1.CreateProductReq
	20, // 62: domain.mall.v1.MallRpc.GetProductById:input_type -> domain.mall.v1.GetProductByIdReq
	22, // 63: domain.mall.v1.MallRpc.MapProductByIds:input_type -> domain.mall.v1.MapProductByIdsReq
	28, // 64: domain.mall.v1.MallRpc.CreateCollection:input_type -> domain.mall.v1.CreateCollectionReq
	24, // 65: domain.mall.v1.MallRpc.GetCollectionById:input_type -> domain.mall.v1.GetCollectionByIdReq
	26, // 66: domain.mall.v1.MallRpc.GetCollectionCardById:input_type -> domain.mall.v1.GetCollectionCardByIdReq
	30, // 67: domain.mall.v1.MallRpc.MapCollectionCardByIds:input_type -> domain.mall.v1.MapCollectionCardByIdsReq
	32, // 68: domain.mall.v1.MallRpc.MapCollectionCardByShopId:input_type -> domain.mall.v1.MapCollectionCardByShopIdReq
	34, // 69: domain.mall.v1.MallRpc.UpdateCollectionState:input_type -> domain.mall.v1.UpdateCollectionStateReq
	36, // 70: domain.mall.v1.MallRpc.UpdateCollectionSku:input_type -> domain.mall.v1.UpdateCollectionSkuReq
	38, // 71: domain.mall.v1.MallRpc.CreateCartItem:input_type -> domain.mall.v1.CreateCartItemReq
	40, // 72: domain.mall.v1.MallRpc.MapCartItemByUid:input_type -> domain.mall.v1.MapCartItemByUidReq
	42, // 73: domain.mall.v1.MallRpc.UpdateCartItemQuantity:input_type -> domain.mall.v1.UpdateCartItemQuantityReq
	44, // 74: domain.mall.v1.MallRpc.DeleteCartItem:input_type -> domain.mall.v1.DeleteCartItemReq
	46, // 75: domain.mall.v1.MallRpc.CreateOrder:input_type -> domain.mall.v1.CreateOrderReq
	48, // 76: domain.mall.v1.MallRpc.GetOrderById:input_type -> domain.mall.v1.GetOrderByIdReq
	50, // 77: domain.mall.v1.MallRpc.MapOrderByIds:input_type -> domain.mall.v1.MapOrderByIdsReq
	52, // 78: domain.mall.v1.MallRpc.MapOrderByUid:input_type -> domain.mall.v1.MapOrderByUidReq
	54, // 79: domain.mall.v1.MallRpc.UpdateOrderState:input_type -> domain.mall.v1.UpdateOrderStateReq
	15, // 80: domain.mall.v1.MallRpc.CreateShop:output_type -> domain.mall.v1.CreateShopResponse
	17, // 81: domain.mall.v1.MallRpc.GetShopById:output_type -> domain.mall.v1.GetShopByIdResponse
	19, // 82: domain.mall.v1.MallRpc.CreateProduct:output_type -> domain.mall.v1.CreateProductResponse
	21, // 83: domain.mall.v1.MallRpc.GetProductById:output_type -> domain.mall.v1.GetProductByIdResponse
	23, // 84: domain.mall.v1.MallRpc.MapProductByIds:output_type -> domain.mall.v1.MapProductByIdsResponse
	29, // 85: domain.mall.v1.MallRpc.CreateCollection:output_type -> domain.mall.v1.CreateCollectionResponse
	25, // 86: domain.mall.v1.MallRpc.GetCollectionById:output_type -> domain.mall.v1.GetCollectionByIdResponse
	27, // 87: domain.mall.v1.MallRpc.GetCollectionCardById:output_type -> domain.mall.v1.GetCollectionCardByIdResponse
	31, // 88: domain.mall.v1.MallRpc.MapCollectionCardByIds:output_type -> domain.mall.v1.MapCollectionCardByIdsResponse
	33, // 89: domain.mall.v1.MallRpc.MapCollectionCardByShopId:output_type -> domain.mall.v1.MapCollectionCardByShopIdResponse
	35, // 90: domain.mall.v1.MallRpc.UpdateCollectionState:output_type -> domain.mall.v1.UpdateCollectionStateResponse
	37, // 91: domain.mall.v1.MallRpc.UpdateCollectionSku:output_type -> domain.mall.v1.UpdateCollectionSkuResponse
	39, // 92: domain.mall.v1.MallRpc.CreateCartItem:output_type -> domain.mall.v1.CreateCartItemResponse
	41, // 93: domain.mall.v1.MallRpc.MapCartItemByUid:output_type -> domain.mall.v1.MapCartItemByUidResponse
	43, // 94: domain.mall.v1.MallRpc.UpdateCartItemQuantity:output_type -> domain.mall.v1.UpdateCartItemQuantityResponse
	45, // 95: domain.mall.v1.MallRpc.DeleteCartItem:output_type -> domain.mall.v1.DeleteCartItemResponse
	47, // 96: domain.mall.v1.MallRpc.CreateOrder:output_type -> domain.mall.v1.CreateOrderResponse
	49, // 97: domain.mall.v1.MallRpc.GetOrderById:output_type -> domain.mall.v1.GetOrderByIdResponse
	51, // 98: domain.mall.v1.MallRpc.MapOrderByIds:output_type -> domain.mall.v1.MapOrderByIdsResponse
	53, // 99: domain.mall.v1.MallRpc.MapOrderByUid:output_type -> domain.mall.v1.MapOrderByUidResponse
	55, // 100: domain.mall.v1.MallRpc.UpdateOrderState:output_type -> domain.mall.v1.UpdateOrderStateResponse
	80, // [80:101] is the sub-list for method output_type
	59, // [59:80] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_domain_mall_v1_mall_proto_init() }
func file_domain_mall_v1_mall_proto_init() {
	if File_domain_mall_v1_mall_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_mall_v1_mall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuOnlyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShopByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapProductByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapProductByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionCardByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionCardByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCollectionCardByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCollectionCardByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCollectionCardByShopIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCollectionCardByShopIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionSkuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionSkuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCartItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCartItemByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCartItemByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemQuantityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemQuantityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCartItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapOrderByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapOrderByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapOrderByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapOrderByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_mall_v1_mall_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_mall_v1_mall_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_mall_v1_mall_proto_goTypes,
		DependencyIndexes: file_domain_mall_v1_mall_proto_depIdxs,
		EnumInfos:         file_domain_mall_v1_mall_proto_enumTypes,
		MessageInfos:      file_domain_mall_v1_mall_proto_msgTypes,
	}.Build()
	File_domain_mall_v1_mall_proto = out.File
	file_domain_mall_v1_mall_proto_rawDesc = nil
	file_domain_mall_v1_mall_proto_goTypes = nil
	file_domain_mall_v1_mall_proto_depIdxs = nil
}
