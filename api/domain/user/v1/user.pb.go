// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: domain/user/v1/user.proto

package domainuserv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "redbook/api/redbookpb/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid    int64     `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name   string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sex    int32     `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar *v1.Image `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Sign   string    `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	Rank   int32     `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
	Level  int32     `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *Info) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Info) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Info) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Info) GetAvatar() *v1.Image {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *Info) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Info) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Info) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid       int64          `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name      string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sex       int32          `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar    *v1.Image      `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Sign      string         `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	Rank      int32          `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
	Level     int32          `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`
	Silence   int32          `protobuf:"varint,9,opt,name=silence,proto3" json:"silence,omitempty"`
	Vip       *VipInfo       `protobuf:"bytes,10,opt,name=vip,proto3" json:"vip,omitempty"`
	Pendant   *PendantInfo   `protobuf:"bytes,11,opt,name=pendant,proto3" json:"pendant,omitempty"`
	Nameplate *NameplateInfo `protobuf:"bytes,12,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
	Official  *OfficialInfo  `protobuf:"bytes,13,opt,name=official,proto3" json:"official,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *Card) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Card) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Card) GetAvatar() *v1.Image {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *Card) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Card) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Card) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Card) GetSilence() int32 {
	if x != nil {
		return x.Silence
	}
	return 0
}

func (x *Card) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Card) GetPendant() *PendantInfo {
	if x != nil {
		return x.Pendant
	}
	return nil
}

func (x *Card) GetNameplate() *NameplateInfo {
	if x != nil {
		return x.Nameplate
	}
	return nil
}

func (x *Card) GetOfficial() *OfficialInfo {
	if x != nil {
		return x.Official
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid            int64          `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name           string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sex            int32          `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar         *v1.Image      `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Sign           string         `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	Rank           int32          `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
	Level          int32          `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`
	JoinTime       int64          `protobuf:"varint,9,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	Moral          int32          `protobuf:"varint,10,opt,name=moral,proto3" json:"moral,omitempty"`
	Silence        int32          `protobuf:"varint,11,opt,name=silence,proto3" json:"silence,omitempty"`
	EmailStatus    int32          `protobuf:"varint,12,opt,name=email_status,json=emailStatus,proto3" json:"email_status,omitempty"`
	PhoneStatus    int32          `protobuf:"varint,13,opt,name=phone_status,json=phoneStatus,proto3" json:"phone_status,omitempty"`
	Identification int32          `protobuf:"varint,14,opt,name=identification,proto3" json:"identification,omitempty"`
	Vip            *VipInfo       `protobuf:"bytes,15,opt,name=vip,proto3" json:"vip,omitempty"`
	Pendant        *PendantInfo   `protobuf:"bytes,16,opt,name=pendant,proto3" json:"pendant,omitempty"`
	Nameplate      *NameplateInfo `protobuf:"bytes,17,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
	Official       *OfficialInfo  `protobuf:"bytes,18,opt,name=official,proto3" json:"official,omitempty"`
	Birthday       int64          `protobuf:"varint,19,opt,name=birthday,proto3" json:"birthday,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *Profile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Profile) GetAvatar() *v1.Image {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *Profile) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Profile) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Profile) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Profile) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *Profile) GetMoral() int32 {
	if x != nil {
		return x.Moral
	}
	return 0
}

func (x *Profile) GetSilence() int32 {
	if x != nil {
		return x.Silence
	}
	return 0
}

func (x *Profile) GetEmailStatus() int32 {
	if x != nil {
		return x.EmailStatus
	}
	return 0
}

func (x *Profile) GetPhoneStatus() int32 {
	if x != nil {
		return x.PhoneStatus
	}
	return 0
}

func (x *Profile) GetIdentification() int32 {
	if x != nil {
		return x.Identification
	}
	return 0
}

func (x *Profile) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Profile) GetPendant() *PendantInfo {
	if x != nil {
		return x.Pendant
	}
	return nil
}

func (x *Profile) GetNameplate() *NameplateInfo {
	if x != nil {
		return x.Nameplate
	}
	return nil
}

func (x *Profile) GetOfficial() *OfficialInfo {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *Profile) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

type LevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cur     int32 `protobuf:"varint,1,opt,name=cur,proto3" json:"cur,omitempty"`
	Min     int32 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	NowExp  int32 `protobuf:"varint,3,opt,name=now_exp,json=nowExp,proto3" json:"now_exp,omitempty"`
	NextExp int32 `protobuf:"varint,4,opt,name=next_exp,json=nextExp,proto3" json:"next_exp,omitempty"`
}

func (x *LevelInfo) Reset() {
	*x = LevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelInfo) ProtoMessage() {}

func (x *LevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelInfo.ProtoReflect.Descriptor instead.
func (*LevelInfo) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *LevelInfo) GetCur() int32 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *LevelInfo) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *LevelInfo) GetNowExp() int32 {
	if x != nil {
		return x.NowExp
	}
	return 0
}

func (x *LevelInfo) GetNextExp() int32 {
	if x != nil {
		return x.NextExp
	}
	return 0
}

type VipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Status     int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	DueDate    int64 `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	VipPayType int32 `protobuf:"varint,4,opt,name=vip_pay_type,json=vipPayType,proto3" json:"vip_pay_type,omitempty"`
}

func (x *VipInfo) Reset() {
	*x = VipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfo) ProtoMessage() {}

func (x *VipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfo.ProtoReflect.Descriptor instead.
func (*VipInfo) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *VipInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VipInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipInfo) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *VipInfo) GetVipPayType() int32 {
	if x != nil {
		return x.VipPayType
	}
	return 0
}

type PendantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid    int32  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image  string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Expire int64  `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *PendantInfo) Reset() {
	*x = PendantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendantInfo) ProtoMessage() {}

func (x *PendantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendantInfo.ProtoReflect.Descriptor instead.
func (*PendantInfo) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *PendantInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *PendantInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PendantInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PendantInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type NameplateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nid        int32  `protobuf:"varint,1,opt,name=nid,proto3" json:"nid,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image      string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	ImageSmall string `protobuf:"bytes,4,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	Level      string `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	Condition  string `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *NameplateInfo) Reset() {
	*x = NameplateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameplateInfo) ProtoMessage() {}

func (x *NameplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameplateInfo.ProtoReflect.Descriptor instead.
func (*NameplateInfo) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *NameplateInfo) GetNid() int32 {
	if x != nil {
		return x.Nid
	}
	return 0
}

func (x *NameplateInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameplateInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NameplateInfo) GetImageSmall() string {
	if x != nil {
		return x.ImageSmall
	}
	return ""
}

func (x *NameplateInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *NameplateInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type OfficialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role  int32  `protobuf:"varint,1,opt,name=role,proto3" json:"role,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc  string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfficialInfo) Reset() {
	*x = OfficialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialInfo) ProtoMessage() {}

func (x *OfficialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialInfo.ProtoReflect.Descriptor instead.
func (*OfficialInfo) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *OfficialInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *OfficialInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfficialInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *CreateUserReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *CreateUserResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateUserResponse) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{12}
}

type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	RealIp   string `protobuf:"bytes,3,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePasswordReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdatePasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdatePasswordReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type GetUserInfoByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserInfoByUidReq) Reset() {
	*x = GetUserInfoByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByUidReq) ProtoMessage() {}

func (x *GetUserInfoByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByUidReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserInfoByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetUserInfoByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *v1.UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetUserInfoByUidResponse) Reset() {
	*x = GetUserInfoByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByUidResponse) ProtoMessage() {}

func (x *GetUserInfoByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByUidResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserInfoByUidResponse) GetInfo() *v1.UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserCardByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserCardByUidReq) Reset() {
	*x = GetUserCardByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCardByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCardByUidReq) ProtoMessage() {}

func (x *GetUserCardByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCardByUidReq.ProtoReflect.Descriptor instead.
func (*GetUserCardByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserCardByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetUserProfileByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserProfileByUidReq) Reset() {
	*x = GetUserProfileByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileByUidReq) ProtoMessage() {}

func (x *GetUserProfileByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileByUidReq.ProtoReflect.Descriptor instead.
func (*GetUserProfileByUidReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserProfileByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type MapUserInfoByUidsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids []int64 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *MapUserInfoByUidsReq) Reset() {
	*x = MapUserInfoByUidsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapUserInfoByUidsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapUserInfoByUidsReq) ProtoMessage() {}

func (x *MapUserInfoByUidsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapUserInfoByUidsReq.ProtoReflect.Descriptor instead.
func (*MapUserInfoByUidsReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{18}
}

func (x *MapUserInfoByUidsReq) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type MapUserInfoByUidsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos map[int64]*v1.UserInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MapUserInfoByUidsResponse) Reset() {
	*x = MapUserInfoByUidsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapUserInfoByUidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapUserInfoByUidsResponse) ProtoMessage() {}

func (x *MapUserInfoByUidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapUserInfoByUidsResponse.ProtoReflect.Descriptor instead.
func (*MapUserInfoByUidsResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{19}
}

func (x *MapUserInfoByUidsResponse) GetInfos() map[int64]*v1.UserInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *MapUserInfoByUidsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type NamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names  []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	RealIp string   `protobuf:"bytes,2,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *NamesReq) Reset() {
	*x = NamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamesReq) ProtoMessage() {}

func (x *NamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamesReq.ProtoReflect.Descriptor instead.
func (*NamesReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{20}
}

func (x *NamesReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *NamesReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type ExpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Exp      float64 `protobuf:"fixed64,2,opt,name=exp,proto3" json:"exp,omitempty"`
	Operater string  `protobuf:"bytes,3,opt,name=operater,proto3" json:"operater,omitempty"`
	Operate  string  `protobuf:"bytes,4,opt,name=operate,proto3" json:"operate,omitempty"`
	Reason   string  `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	RealIp   string  `protobuf:"bytes,6,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *ExpReq) Reset() {
	*x = ExpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpReq) ProtoMessage() {}

func (x *ExpReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpReq.ProtoReflect.Descriptor instead.
func (*ExpReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{21}
}

func (x *ExpReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ExpReq) GetExp() float64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ExpReq) GetOperater() string {
	if x != nil {
		return x.Operater
	}
	return ""
}

func (x *ExpReq) GetOperate() string {
	if x != nil {
		return x.Operate
	}
	return ""
}

func (x *ExpReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ExpReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type MoralReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Moral  float64 `protobuf:"fixed64,2,opt,name=moral,proto3" json:"moral,omitempty"`
	Oper   string  `protobuf:"bytes,3,opt,name=oper,proto3" json:"oper,omitempty"`
	Reason string  `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Remark string  `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	RealIp string  `protobuf:"bytes,6,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *MoralReq) Reset() {
	*x = MoralReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoralReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoralReq) ProtoMessage() {}

func (x *MoralReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoralReq.ProtoReflect.Descriptor instead.
func (*MoralReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{22}
}

func (x *MoralReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MoralReq) GetMoral() float64 {
	if x != nil {
		return x.Moral
	}
	return 0
}

func (x *MoralReq) GetOper() string {
	if x != nil {
		return x.Oper
	}
	return ""
}

func (x *MoralReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MoralReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MoralReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type RelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OwnerUid int64  `protobuf:"varint,2,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	RealIp   string `protobuf:"bytes,3,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *RelationReq) Reset() {
	*x = RelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationReq) ProtoMessage() {}

func (x *RelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationReq.ProtoReflect.Descriptor instead.
func (*RelationReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{23}
}

func (x *RelationReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelationReq) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

func (x *RelationReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type RelationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Owners []int64 `protobuf:"varint,2,rep,packed,name=owners,proto3" json:"owners,omitempty"`
	RealIp string  `protobuf:"bytes,3,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *RelationsReq) Reset() {
	*x = RelationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsReq) ProtoMessage() {}

func (x *RelationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsReq.ProtoReflect.Descriptor instead.
func (*RelationsReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{24}
}

func (x *RelationsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RelationsReq) GetOwners() []int64 {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *RelationsReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type RichRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUid int64   `protobuf:"varint,1,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	Uids     []int64 `protobuf:"varint,2,rep,packed,name=uids,proto3" json:"uids,omitempty"`
	RealIp   string  `protobuf:"bytes,3,opt,name=real_ip,json=realIp,proto3" json:"real_ip,omitempty"`
}

func (x *RichRelationReq) Reset() {
	*x = RichRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichRelationReq) ProtoMessage() {}

func (x *RichRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichRelationReq.ProtoReflect.Descriptor instead.
func (*RichRelationReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{25}
}

func (x *RichRelationReq) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

func (x *RichRelationReq) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

func (x *RichRelationReq) GetRealIp() string {
	if x != nil {
		return x.RealIp
	}
	return ""
}

type UpdateProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *UpdateProfileReq) Reset() {
	*x = UpdateProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileReq) ProtoMessage() {}

func (x *UpdateProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileReq.ProtoReflect.Descriptor instead.
func (*UpdateProfileReq) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateProfileReq) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type UpdateProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProfileResponse) Reset() {
	*x = UpdateProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileResponse) ProtoMessage() {}

func (x *UpdateProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileResponse.ProtoReflect.Descriptor instead.
func (*UpdateProfileResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{27}
}

type GetUserProfileByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetUserProfileByUidResponse) Reset() {
	*x = GetUserProfileByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileByUidResponse) ProtoMessage() {}

func (x *GetUserProfileByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileByUidResponse.ProtoReflect.Descriptor instead.
func (*GetUserProfileByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserProfileByUidResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type GetUserCardByUidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card *Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *GetUserCardByUidResponse) Reset() {
	*x = GetUserCardByUidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCardByUidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCardByUidResponse) ProtoMessage() {}

func (x *GetUserCardByUidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCardByUidResponse.ProtoReflect.Descriptor instead.
func (*GetUserCardByUidResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserCardByUidResponse) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type CardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards map[int64]*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CardsResponse) Reset() {
	*x = CardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsResponse) ProtoMessage() {}

func (x *CardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsResponse.ProtoReflect.Descriptor instead.
func (*CardsResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{30}
}

func (x *CardsResponse) GetCards() map[int64]*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type ProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *ProfileResponse) Reset() {
	*x = ProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileResponse) ProtoMessage() {}

func (x *ProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileResponse.ProtoReflect.Descriptor instead.
func (*ProfileResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{31}
}

func (x *ProfileResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type ProfileStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile   *Profile   `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	LevelInfo *LevelInfo `protobuf:"bytes,2,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	Coins     float64    `protobuf:"fixed64,3,opt,name=coins,proto3" json:"coins,omitempty"`
	Following int64      `protobuf:"varint,4,opt,name=following,proto3" json:"following,omitempty"`
	Follower  int64      `protobuf:"varint,5,opt,name=follower,proto3" json:"follower,omitempty"`
}

func (x *ProfileStatResponse) Reset() {
	*x = ProfileStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileStatResponse) ProtoMessage() {}

func (x *ProfileStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileStatResponse.ProtoReflect.Descriptor instead.
func (*ProfileStatResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{32}
}

func (x *ProfileStatResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ProfileStatResponse) GetLevelInfo() *LevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *ProfileStatResponse) GetCoins() float64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *ProfileStatResponse) GetFollowing() int64 {
	if x != nil {
		return x.Following
	}
	return 0
}

func (x *ProfileStatResponse) GetFollower() int64 {
	if x != nil {
		return x.Follower
	}
	return 0
}

type RelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Following bool `protobuf:"varint,1,opt,name=following,proto3" json:"following,omitempty"`
}

func (x *RelationResponse) Reset() {
	*x = RelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationResponse) ProtoMessage() {}

func (x *RelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationResponse.ProtoReflect.Descriptor instead.
func (*RelationResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{33}
}

func (x *RelationResponse) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

type AttentionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attentions []int64 `protobuf:"varint,1,rep,packed,name=attentions,proto3" json:"attentions,omitempty"`
}

func (x *AttentionsResponse) Reset() {
	*x = AttentionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttentionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttentionsResponse) ProtoMessage() {}

func (x *AttentionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttentionsResponse.ProtoReflect.Descriptor instead.
func (*AttentionsResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{34}
}

func (x *AttentionsResponse) GetAttentions() []int64 {
	if x != nil {
		return x.Attentions
	}
	return nil
}

type BlacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlackList map[int64]bool `protobuf:"bytes,1,rep,name=black_list,json=blackList,proto3" json:"black_list,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *BlacksResponse) Reset() {
	*x = BlacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacksResponse) ProtoMessage() {}

func (x *BlacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacksResponse.ProtoReflect.Descriptor instead.
func (*BlacksResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{35}
}

func (x *BlacksResponse) GetBlackList() map[int64]bool {
	if x != nil {
		return x.BlackList
	}
	return nil
}

type RelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations map[int64]*RelationResponse `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RelationsResponse) Reset() {
	*x = RelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsResponse) ProtoMessage() {}

func (x *RelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsResponse.ProtoReflect.Descriptor instead.
func (*RelationsResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{36}
}

func (x *RelationsResponse) GetRelations() map[int64]*RelationResponse {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RichRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichRelations map[int64]int32 `protobuf:"bytes,1,rep,name=rich_relations,json=richRelations,proto3" json:"rich_relations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *RichRelationsResponse) Reset() {
	*x = RichRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichRelationsResponse) ProtoMessage() {}

func (x *RichRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichRelationsResponse.ProtoReflect.Descriptor instead.
func (*RichRelationsResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{37}
}

func (x *RichRelationsResponse) GetRichRelations() map[int64]int32 {
	if x != nil {
		return x.RichRelations
	}
	return nil
}

type VipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Status     int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	DueDate    int64 `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	VipPayType int32 `protobuf:"varint,4,opt,name=vip_pay_type,json=vipPayType,proto3" json:"vip_pay_type,omitempty"`
}

func (x *VipResponse) Reset() {
	*x = VipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipResponse) ProtoMessage() {}

func (x *VipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipResponse.ProtoReflect.Descriptor instead.
func (*VipResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{38}
}

func (x *VipResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VipResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipResponse) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *VipResponse) GetVipPayType() int32 {
	if x != nil {
		return x.VipPayType
	}
	return 0
}

type VipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vips map[int64]*VipResponse `protobuf:"bytes,1,rep,name=vips,proto3" json:"vips,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VipsResponse) Reset() {
	*x = VipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipsResponse) ProtoMessage() {}

func (x *VipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipsResponse.ProtoReflect.Descriptor instead.
func (*VipsResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{39}
}

func (x *VipsResponse) GetVips() map[int64]*VipResponse {
	if x != nil {
		return x.Vips
	}
	return nil
}

type ExpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExpResponse) Reset() {
	*x = ExpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpResponse) ProtoMessage() {}

func (x *ExpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpResponse.ProtoReflect.Descriptor instead.
func (*ExpResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{40}
}

type MoralResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoralResponse) Reset() {
	*x = MoralResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_user_v1_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoralResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoralResponse) ProtoMessage() {}

func (x *MoralResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_user_v1_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoralResponse.ProtoReflect.Descriptor instead.
func (*MoralResponse) Descriptor() ([]byte, []int) {
	return file_domain_user_v1_user_proto_rawDescGZIP(), []int{41}
}

var File_domain_user_v1_user_proto protoreflect.FileDescriptor

var file_domain_user_v1_user_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xea, 0xde,
	0x1f, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde,
	0x1f, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea,
	0xde, 0x1f, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x2d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x88,
	0x02, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x06, 0xea, 0xde, 0x1f, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde,
	0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x65, 0x78, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xcf, 0x04, 0x0a, 0x04, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06,
	0xea, 0xde, 0x1f, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x65, 0x78, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x3b,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x69, 0x6c, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x73,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x03, 0x76, 0x69, 0x70, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x74, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x12,
	0x4e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x11, 0xea, 0xde, 0x1f, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x4a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x10, 0xea, 0xde, 0x1f, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x22, 0xf5, 0x06, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x06, 0xea, 0xde, 0x1f, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xea, 0xde,
	0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xea, 0xde, 0x1f, 0x03, 0x73, 0x65, 0x78, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xea, 0xde,
	0x1f, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x6f, 0x72, 0x61, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6d, 0x6f, 0x72, 0x61, 0x6c, 0x52, 0x05,
	0x6d, 0x6f, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x07, 0x73, 0x69, 0x6c, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x07, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x31, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x0a, 0x74, 0x65, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xea, 0xde,
	0x1f, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0xea, 0xde, 0x1f, 0x03, 0x76, 0x69, 0x70, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x07, 0x70, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x74, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74,
	0x12, 0x4e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x11, 0xea, 0xde, 0x1f, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x4a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x10, 0xea, 0xde, 0x1f, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19,
	0xea, 0xde, 0x1f, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0xfa, 0xde, 0x1f, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11,
	0xea, 0xde, 0x1f, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x03, 0x63, 0x75, 0x72, 0x12, 0x21, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x69, 0x6e, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x6e, 0x6f, 0x77,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x52, 0x06, 0x6e, 0x6f, 0x77,
	0x45, 0x78, 0x70, 0x12, 0x27, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x65, 0x78, 0x70, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x70, 0x22, 0xa8, 0x01, 0x0a,
	0x07, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xea, 0xde, 0x1f, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x64, 0x75,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xea, 0xde,
	0x1f, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x0c, 0x76,
	0x69, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x76, 0x69, 0x70,
	0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x03, 0x70, 0x69, 0x64, 0xfa, 0xde, 0x1f,
	0x03, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xea, 0xde, 0x1f, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0xfa, 0xde, 0x1f, 0x03, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0e, 0xea, 0xde, 0x1f, 0x03, 0x6e, 0x69, 0x64, 0xfa, 0xde, 0x1f, 0x03, 0x69,
	0x6e, 0x74, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xea, 0xde, 0x1f,
	0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xea, 0xde,
	0x1f, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0xfa, 0xde,
	0x1f, 0x04, 0x69, 0x6e, 0x74, 0x38, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xea, 0xde, 0x1f,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xea, 0xde, 0x1f,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x39, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x39,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x06, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x49, 0x70, 0x22, 0x30, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x64, 0x62,
	0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x38,
	0x0a, 0x14, 0x4d, 0x61, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55,
	0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x19, 0x4d, 0x61, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x50, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f,
	0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x08, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72,
	0x02, 0x10, 0x04, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65,
	0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x6c, 0x49, 0x70, 0x22, 0x9c, 0x01, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c,
	0x49, 0x70, 0x22, 0x98, 0x01, 0x0a, 0x08, 0x4d, 0x6f, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x72, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6f, 0x70, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x49, 0x70, 0x22, 0x5e, 0x0a,
	0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x49, 0x70, 0x22, 0x5a, 0x0a,
	0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x49, 0x70, 0x22, 0x69, 0x0a, 0x0f, 0x52, 0x69, 0x63,
	0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x6c, 0x49, 0x70, 0x22, 0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x9f, 0x01, 0x0a,
	0x0d, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x4e,
	0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x3e, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x63, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x22,
	0x30, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x22, 0x34, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5e, 0x0a, 0x0e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xba, 0x01, 0x0a,
	0x15, 0x52, 0x69, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x69, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x69, 0x63, 0x68, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x69, 0x63, 0x68, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x0b, 0x56, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x56, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x76, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56,
	0x69, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x76, 0x69, 0x70, 0x73, 0x1a, 0x54,
	0x0a, 0x09, 0x56, 0x69, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x4d, 0x6f, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8e, 0x05, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x70, 0x63,
	0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x12, 0x23, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x11, 0x4d, 0x61, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x55, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x55, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64,
	0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4a, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x72, 0x65, 0x64, 0x62, 0x6f, 0x6f,
	0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x75, 0x73, 0x65, 0x72, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_user_v1_user_proto_rawDescOnce sync.Once
	file_domain_user_v1_user_proto_rawDescData = file_domain_user_v1_user_proto_rawDesc
)

func file_domain_user_v1_user_proto_rawDescGZIP() []byte {
	file_domain_user_v1_user_proto_rawDescOnce.Do(func() {
		file_domain_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_user_v1_user_proto_rawDescData)
	})
	return file_domain_user_v1_user_proto_rawDescData
}

var file_domain_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_domain_user_v1_user_proto_goTypes = []interface{}{
	(*User)(nil),                        // 0: domain.user.v1.User
	(*Info)(nil),                        // 1: domain.user.v1.Info
	(*Card)(nil),                        // 2: domain.user.v1.Card
	(*Profile)(nil),                     // 3: domain.user.v1.Profile
	(*LevelInfo)(nil),                   // 4: domain.user.v1.LevelInfo
	(*VipInfo)(nil),                     // 5: domain.user.v1.VipInfo
	(*PendantInfo)(nil),                 // 6: domain.user.v1.PendantInfo
	(*NameplateInfo)(nil),               // 7: domain.user.v1.NameplateInfo
	(*OfficialInfo)(nil),                // 8: domain.user.v1.OfficialInfo
	(*CreateUserReq)(nil),               // 9: domain.user.v1.CreateUserReq
	(*CreateUserResponse)(nil),          // 10: domain.user.v1.CreateUserResponse
	(*UpdateUserReq)(nil),               // 11: domain.user.v1.UpdateUserReq
	(*UpdateUserResponse)(nil),          // 12: domain.user.v1.UpdateUserResponse
	(*UpdatePasswordReq)(nil),           // 13: domain.user.v1.UpdatePasswordReq
	(*GetUserInfoByUidReq)(nil),         // 14: domain.user.v1.GetUserInfoByUidReq
	(*GetUserInfoByUidResponse)(nil),    // 15: domain.user.v1.GetUserInfoByUidResponse
	(*GetUserCardByUidReq)(nil),         // 16: domain.user.v1.GetUserCardByUidReq
	(*GetUserProfileByUidReq)(nil),      // 17: domain.user.v1.GetUserProfileByUidReq
	(*MapUserInfoByUidsReq)(nil),        // 18: domain.user.v1.MapUserInfoByUidsReq
	(*MapUserInfoByUidsResponse)(nil),   // 19: domain.user.v1.MapUserInfoByUidsResponse
	(*NamesReq)(nil),                    // 20: domain.user.v1.NamesReq
	(*ExpReq)(nil),                      // 21: domain.user.v1.ExpReq
	(*MoralReq)(nil),                    // 22: domain.user.v1.MoralReq
	(*RelationReq)(nil),                 // 23: domain.user.v1.RelationReq
	(*RelationsReq)(nil),                // 24: domain.user.v1.RelationsReq
	(*RichRelationReq)(nil),             // 25: domain.user.v1.RichRelationReq
	(*UpdateProfileReq)(nil),            // 26: domain.user.v1.UpdateProfileReq
	(*UpdateProfileResponse)(nil),       // 27: domain.user.v1.UpdateProfileResponse
	(*GetUserProfileByUidResponse)(nil), // 28: domain.user.v1.GetUserProfileByUidResponse
	(*GetUserCardByUidResponse)(nil),    // 29: domain.user.v1.GetUserCardByUidResponse
	(*CardsResponse)(nil),               // 30: domain.user.v1.CardsResponse
	(*ProfileResponse)(nil),             // 31: domain.user.v1.ProfileResponse
	(*ProfileStatResponse)(nil),         // 32: domain.user.v1.ProfileStatResponse
	(*RelationResponse)(nil),            // 33: domain.user.v1.RelationResponse
	(*AttentionsResponse)(nil),          // 34: domain.user.v1.AttentionsResponse
	(*BlacksResponse)(nil),              // 35: domain.user.v1.BlacksResponse
	(*RelationsResponse)(nil),           // 36: domain.user.v1.RelationsResponse
	(*RichRelationsResponse)(nil),       // 37: domain.user.v1.RichRelationsResponse
	(*VipResponse)(nil),                 // 38: domain.user.v1.VipResponse
	(*VipsResponse)(nil),                // 39: domain.user.v1.VipsResponse
	(*ExpResponse)(nil),                 // 40: domain.user.v1.ExpResponse
	(*MoralResponse)(nil),               // 41: domain.user.v1.MoralResponse
	nil,                                 // 42: domain.user.v1.MapUserInfoByUidsResponse.InfosEntry
	nil,                                 // 43: domain.user.v1.CardsResponse.CardsEntry
	nil,                                 // 44: domain.user.v1.BlacksResponse.BlackListEntry
	nil,                                 // 45: domain.user.v1.RelationsResponse.RelationsEntry
	nil,                                 // 46: domain.user.v1.RichRelationsResponse.RichRelationsEntry
	nil,                                 // 47: domain.user.v1.VipsResponse.VipsEntry
	(*v1.Image)(nil),                    // 48: redbookpb.v1.Image
	(*v1.UserInfo)(nil),                 // 49: redbookpb.v1.UserInfo
	(*v1.EmptyResponse)(nil),            // 50: redbookpb.v1.EmptyResponse
}
var file_domain_user_v1_user_proto_depIdxs = []int32{
	48, // 0: domain.user.v1.Info.avatar:type_name -> redbookpb.v1.Image
	48, // 1: domain.user.v1.Card.avatar:type_name -> redbookpb.v1.Image
	5,  // 2: domain.user.v1.Card.vip:type_name -> domain.user.v1.VipInfo
	6,  // 3: domain.user.v1.Card.pendant:type_name -> domain.user.v1.PendantInfo
	7,  // 4: domain.user.v1.Card.nameplate:type_name -> domain.user.v1.NameplateInfo
	8,  // 5: domain.user.v1.Card.official:type_name -> domain.user.v1.OfficialInfo
	48, // 6: domain.user.v1.Profile.avatar:type_name -> redbookpb.v1.Image
	5,  // 7: domain.user.v1.Profile.vip:type_name -> domain.user.v1.VipInfo
	6,  // 8: domain.user.v1.Profile.pendant:type_name -> domain.user.v1.PendantInfo
	7,  // 9: domain.user.v1.Profile.nameplate:type_name -> domain.user.v1.NameplateInfo
	8,  // 10: domain.user.v1.Profile.official:type_name -> domain.user.v1.OfficialInfo
	0,  // 11: domain.user.v1.CreateUserReq.user:type_name -> domain.user.v1.User
	0,  // 12: domain.user.v1.UpdateUserReq.user:type_name -> domain.user.v1.User
	49, // 13: domain.user.v1.GetUserInfoByUidResponse.info:type_name -> redbookpb.v1.UserInfo
	42, // 14: domain.user.v1.MapUserInfoByUidsResponse.infos:type_name -> domain.user.v1.MapUserInfoByUidsResponse.InfosEntry
	3,  // 15: domain.user.v1.UpdateProfileReq.profile:type_name -> domain.user.v1.Profile
	3,  // 16: domain.user.v1.GetUserProfileByUidResponse.profile:type_name -> domain.user.v1.Profile
	2,  // 17: domain.user.v1.GetUserCardByUidResponse.card:type_name -> domain.user.v1.Card
	43, // 18: domain.user.v1.CardsResponse.cards:type_name -> domain.user.v1.CardsResponse.CardsEntry
	3,  // 19: domain.user.v1.ProfileResponse.profile:type_name -> domain.user.v1.Profile
	3,  // 20: domain.user.v1.ProfileStatResponse.profile:type_name -> domain.user.v1.Profile
	4,  // 21: domain.user.v1.ProfileStatResponse.level_info:type_name -> domain.user.v1.LevelInfo
	44, // 22: domain.user.v1.BlacksResponse.black_list:type_name -> domain.user.v1.BlacksResponse.BlackListEntry
	45, // 23: domain.user.v1.RelationsResponse.relations:type_name -> domain.user.v1.RelationsResponse.RelationsEntry
	46, // 24: domain.user.v1.RichRelationsResponse.rich_relations:type_name -> domain.user.v1.RichRelationsResponse.RichRelationsEntry
	47, // 25: domain.user.v1.VipsResponse.vips:type_name -> domain.user.v1.VipsResponse.VipsEntry
	49, // 26: domain.user.v1.MapUserInfoByUidsResponse.InfosEntry.value:type_name -> redbookpb.v1.UserInfo
	2,  // 27: domain.user.v1.CardsResponse.CardsEntry.value:type_name -> domain.user.v1.Card
	33, // 28: domain.user.v1.RelationsResponse.RelationsEntry.value:type_name -> domain.user.v1.RelationResponse
	38, // 29: domain.user.v1.VipsResponse.VipsEntry.value:type_name -> domain.user.v1.VipResponse
	9,  // 30: domain.user.v1.UserRpc.CreateUser:input_type -> domain.user.v1.CreateUserReq
	11, // 31: domain.user.v1.UserRpc.UpdateUser:input_type -> domain.user.v1.UpdateUserReq
	13, // 32: domain.user.v1.UserRpc.UpdatePassword:input_type -> domain.user.v1.UpdatePasswordReq
	14, // 33: domain.user.v1.UserRpc.GetUserInfoByUid:input_type -> domain.user.v1.GetUserInfoByUidReq
	18, // 34: domain.user.v1.UserRpc.MapUserInfoByUids:input_type -> domain.user.v1.MapUserInfoByUidsReq
	16, // 35: domain.user.v1.UserRpc.GetUserByUidCard:input_type -> domain.user.v1.GetUserCardByUidReq
	17, // 36: domain.user.v1.UserRpc.GetUserProfileByUid:input_type -> domain.user.v1.GetUserProfileByUidReq
	10, // 37: domain.user.v1.UserRpc.CreateUser:output_type -> domain.user.v1.CreateUserResponse
	50, // 38: domain.user.v1.UserRpc.UpdateUser:output_type -> redbookpb.v1.EmptyResponse
	50, // 39: domain.user.v1.UserRpc.UpdatePassword:output_type -> redbookpb.v1.EmptyResponse
	15, // 40: domain.user.v1.UserRpc.GetUserInfoByUid:output_type -> domain.user.v1.GetUserInfoByUidResponse
	19, // 41: domain.user.v1.UserRpc.MapUserInfoByUids:output_type -> domain.user.v1.MapUserInfoByUidsResponse
	29, // 42: domain.user.v1.UserRpc.GetUserByUidCard:output_type -> domain.user.v1.GetUserCardByUidResponse
	28, // 43: domain.user.v1.UserRpc.GetUserProfileByUid:output_type -> domain.user.v1.GetUserProfileByUidResponse
	37, // [37:44] is the sub-list for method output_type
	30, // [30:37] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_domain_user_v1_user_proto_init() }
func file_domain_user_v1_user_proto_init() {
	if File_domain_user_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_user_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameplateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCardByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapUserInfoByUidsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapUserInfoByUidsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoralReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCardByUidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttentionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_user_v1_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoralResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_user_v1_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_user_v1_user_proto_goTypes,
		DependencyIndexes: file_domain_user_v1_user_proto_depIdxs,
		MessageInfos:      file_domain_user_v1_user_proto_msgTypes,
	}.Build()
	File_domain_user_v1_user_proto = out.File
	file_domain_user_v1_user_proto_rawDesc = nil
	file_domain_user_v1_user_proto_goTypes = nil
	file_domain_user_v1_user_proto_depIdxs = nil
}
