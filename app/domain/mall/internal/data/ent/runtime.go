// Code generated by ent, DO NOT EDIT.

package ent

import (
	"redbook/app/domain/mall/internal/data/ent/order"
	"redbook/app/domain/mall/internal/data/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescUID is the schema descriptor for uid field.
	orderDescUID := orderFields[1].Descriptor()
	// order.UIDValidator is a validator for the "uid" field. It is called by the builders before save.
	order.UIDValidator = orderDescUID.Validators[0].(func(int64) error)
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderFields[6].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderFields[7].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() time.Time)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orderDescID is the schema descriptor for id field.
	orderDescID := orderFields[0].Descriptor()
	// order.IDValidator is a validator for the "id" field. It is called by the builders before save.
	order.IDValidator = orderDescID.Validators[0].(func(int64) error)
}
